{"Event":"SparkListenerLogStart","Spark Version":"3.5.0"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"cores":{"Resource Name":"cores","Amount":1,"Discovery Script":"","Vendor":""},"memory":{"Resource Name":"memory","Amount":1024,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":0,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1707201178138,"Executor ID":"driver","Executor Info":{"Host":"9b6a3c18e92a","Total Cores":8,"Log Urls":{},"Attributes":{},"Resources":{},"Resource Profile Id":0}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"9b6a3c18e92a","Port":41895},"Maximum Memory":455501414,"Timestamp":1707201178150,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/usr/lib/jvm/java-17-openjdk-arm64","Java Version":"17.0.8.1 (Private Build)","Scala Version":"version 2.12.18"},"Spark Properties":{"spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.driver.host":"9b6a3c18e92a","spark.serializer.objectStreamReset":"100","spark.eventLog.enabled":"true","spark.driver.port":"36881","spark.rdd.compress":"True","spark.app.name":"SparkExample","spark.scheduler.mode":"FIFO","spark.submit.pyFiles":"","spark.ui.showConsoleProgress":"true","spark.app.submitTime":"1707201177050","spark.app.startTime":"1707201177269","spark.executor.id":"driver","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.submit.deployMode":"client","spark.master":"local[*]","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.app.id":"local-1707201178077"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"s3.amazonaws.com","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"false","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"\n    org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider,\n    org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider,\n    com.amazonaws.auth.EnvironmentVariableCredentialsProvider,\n    org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider\n  ","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"64M","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","line.separator":"\n","path.separator":":","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.version":"17","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"Private Build","java.vm.specification.version":"17","user.home":"/home/jovyan","sun.arch.data.model":"64","sun.boot.library.path":"/usr/lib/jvm/java-17-openjdk-arm64/lib","user.dir":"/home/jovyan/work","java.library.path":"/usr/java/packages/lib:/usr/lib/aarch64-linux-gnu/jni:/lib/aarch64-linux-gnu:/usr/lib/aarch64-linux-gnu:/usr/lib/jni:/lib:/usr/lib","os.arch":"aarch64","java.vm.version":"17.0.8.1+1-Ubuntu-0ubuntu122.04","jetty.git.hash":"abdcda73818a1a2c705da276edb0bf6581e7997e","java.runtime.version":"17.0.8.1+1-Ubuntu-0ubuntu122.04","java.vm.info":"mixed mode, sharing","java.runtime.name":"OpenJDK Runtime Environment","java.version.date":"2023-08-24","file.separator":"/","java.class.version":"61.0","java.specification.name":"Java Platform API Specification","file.encoding":"UTF-8","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"Etc/UTC","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","java.vm.compressedOopsMode":"32-bit","os.version":"6.4.16-linuxkit","native.encoding":"UTF-8","java.vm.specification.vendor":"Oracle Corporation","user.country":"US","sun.jnu.encoding":"UTF-8","user.language":"en","java.vendor.url":"Unknown","os.name":"Linux","java.vm.vendor":"Private Build","jdk.debug":"release","java.vendor.url.bug":"Unknown","user.name":"jovyan","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --conf spark.eventLog.enabled=true --conf spark.eventLog.dir=file:/home/jovyan/work/logs --conf spark.app.name=SparkExample pyspark-shell","java.home":"/usr/lib/jvm/java-17-openjdk-arm64","java.version":"17.0.8.1","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"/usr/local/spark/jars/commons-lang-2.6.jar":"System Classpath","/usr/local/spark/jars/slf4j-api-2.0.7.jar":"System Classpath","/usr/local/spark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/usr/local/spark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/transaction-api-1.1.jar":"System Classpath","/usr/local/spark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/usr/local/spark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/usr/local/spark/jars/commons-codec-1.16.0.jar":"System Classpath","/usr/local/spark/jars/commons-logging-1.1.3.jar":"System Classpath","/usr/local/spark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/usr/local/spark/jars/guava-14.0.1.jar":"System Classpath","/usr/local/spark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/usr/local/spark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/usr/local/spark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/usr/local/spark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/zookeeper-3.6.3.jar":"System Classpath","/usr/local/spark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/jpam-1.1.jar":"System Classpath","/usr/local/spark/jars/spark-graphx_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/usr/local/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/usr/local/spark/jars/commons-math3-3.6.1.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/usr/local/spark/jars/blas-3.0.3.jar":"System Classpath","/usr/local/spark/jars/derby-10.14.2.0.jar":"System Classpath","/usr/local/spark/jars/log4j-api-2.20.0.jar":"System Classpath","/usr/local/spark/jars/ST4-4.0.4.jar":"System Classpath","/usr/local/spark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/usr/local/spark/jars/log4j-core-2.20.0.jar":"System Classpath","/usr/local/spark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/usr/local/spark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/usr/local/spark/jars/minlog-1.3.0.jar":"System Classpath","/usr/local/spark/jars/spark-repl_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/jersey-hk2-2.40.jar":"System Classpath","/usr/local/spark/jars/HikariCP-2.5.1.jar":"System Classpath","/usr/local/spark/jars/arpack_combined_all-0.1.jar":"System Classpath","/usr/local/spark/jars/jta-1.1.jar":"System Classpath","/usr/local/spark/jars/commons-text-1.10.0.jar":"System Classpath","/usr/local/spark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/jersey-server-2.40.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","/usr/local/spark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/usr/local/spark/jars/hive-shims-2.3.9.jar":"System Classpath","/usr/local/spark/jars/jersey-common-2.40.jar":"System Classpath","/usr/local/spark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","/usr/local/spark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/usr/local/spark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/usr/local/spark/jars/javolution-5.5.1.jar":"System Classpath","/usr/local/spark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/usr/local/spark/jars/jline-2.14.6.jar":"System Classpath","/usr/local/spark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/usr/local/spark/jars/hk2-api-2.6.1.jar":"System Classpath","/usr/local/spark/jars/libthrift-0.12.0.jar":"System Classpath","/usr/local/spark/jars/hive-metastore-2.3.9.jar":"System Classpath","/usr/local/spark/jars/javassist-3.29.2-GA.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/usr/local/spark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/usr/local/spark/jars/commons-compress-1.23.0.jar":"System Classpath","/usr/local/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","/usr/local/spark/jars/jsr305-3.0.0.jar":"System Classpath","/usr/local/spark/jars/spark-yarn_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/usr/local/spark/jars/gson-2.2.4.jar":"System Classpath","/usr/local/spark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/spark-launcher_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/snakeyaml-2.0.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/usr/local/spark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/usr/local/spark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/usr/local/spark/jars/hive-serde-2.3.9.jar":"System Classpath","/usr/local/spark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/usr/local/spark/jars/httpcore-4.4.16.jar":"System Classpath","/usr/local/spark/jars/commons-io-2.13.0.jar":"System Classpath","/usr/local/spark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/usr/local/spark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/usr/local/spark/jars/kryo-shaded-4.0.2.jar":"System Classpath","/usr/local/spark/jars/annotations-17.0.0.jar":"System Classpath","/usr/local/spark/jars/hive-common-2.3.9.jar":"System Classpath","/usr/local/spark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/usr/local/spark/jars/py4j-0.10.9.7.jar":"System Classpath","/usr/local/spark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/usr/local/spark/jars/libfb303-0.9.3.jar":"System Classpath","/usr/local/spark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/usr/local/spark/jars/lapack-3.0.3.jar":"System Classpath","/usr/local/spark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/usr/local/spark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/usr/local/spark/jars/super-csv-2.2.0.jar":"System Classpath","/usr/local/spark/jars/jdo-api-3.0.1.jar":"System Classpath","/usr/local/spark/jars/chill_2.12-0.10.0.jar":"System Classpath","/usr/local/spark/jars/spark-mllib_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/okio-1.15.0.jar":"System Classpath","/usr/local/spark/jars/jackson-core-2.15.2.jar":"System Classpath","/usr/local/spark/jars/opencsv-2.3.jar":"System Classpath","/usr/local/spark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/usr/local/spark/jars/zstd-jni-1.5.5-4.jar":"System Classpath","/usr/local/spark/jars/json-1.8.jar":"System Classpath","/usr/local/spark/jars/commons-cli-1.5.0.jar":"System Classpath","/usr/local/spark/jars/threeten-extra-1.7.1.jar":"System Classpath","/usr/local/spark/jars/commons-collections4-4.4.jar":"System Classpath","/usr/local/spark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/usr/local/spark/jars/spark-sql-api_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/tink-1.9.0.jar":"System Classpath","/usr/local/spark/jars/avro-ipc-1.11.2.jar":"System Classpath","/usr/local/spark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","/usr/local/spark/jars/spark-mllib-local_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/pickle-1.3.jar":"System Classpath","/usr/local/spark/jars/breeze_2.12-2.1.0.jar":"System Classpath","/usr/local/spark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/usr/local/spark/jars/curator-client-2.13.0.jar":"System Classpath","/usr/local/spark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/usr/local/spark/jars/algebra_2.12-2.0.1.jar":"System Classpath","/usr/local/spark/jars/jodd-core-3.5.2.jar":"System Classpath","/usr/local/spark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/usr/local/spark/jars/stax-api-1.0.1.jar":"System Classpath","/usr/local/spark/jars/objenesis-3.3.jar":"System Classpath","/usr/local/spark/jars/metrics-core-4.2.19.jar":"System Classpath","/usr/local/spark/jars/avro-1.11.2.jar":"System Classpath","/usr/local/spark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/usr/local/spark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/usr/local/spark/jars/arrow-format-12.0.1.jar":"System Classpath","/usr/local/spark/jars/spark-unsafe_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/spark-sql_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/compress-lzf-1.1.2.jar":"System Classpath","/usr/local/spark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/usr/local/spark/jars/orc-core-1.9.1-shaded-protobuf.jar":"System Classpath","/usr/local/spark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/usr/local/spark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","/usr/local/spark/jars/hk2-locator-2.6.1.jar":"System Classpath","/usr/local/spark/jars/curator-framework-2.13.0.jar":"System Classpath","/usr/local/spark/jars/leveldbjni-all-1.8.jar":"System Classpath","/usr/local/spark/jars/arpack-3.0.3.jar":"System Classpath","/usr/local/spark/jars/spark-streaming_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","/usr/local/spark/jars/spark-network-common_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/hive-beeline-2.3.9.jar":"System Classpath","/usr/local/spark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/usr/local/spark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/usr/local/spark/jars/spark-core_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/spark-mesos_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/usr/local/spark/jars/avro-mapred-1.11.2.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/usr/local/spark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/usr/local/spark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/usr/local/spark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","/usr/local/spark/jars/metrics-json-4.2.19.jar":"System Classpath","/usr/local/spark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/usr/local/spark/jars/scala-library-2.12.18.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/usr/local/spark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/usr/local/spark/jars/chill-java-0.10.0.jar":"System Classpath","/usr/local/spark/jars/spark-hive_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/paranamer-2.8.jar":"System Classpath","/usr/local/spark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/usr/local/spark/jars/commons-dbcp-1.4.jar":"System Classpath","/usr/local/spark/jars/commons-collections-3.2.2.jar":"System Classpath","/usr/local/spark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","/usr/local/spark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/usr/local/spark/jars/spark-common-utils_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/audience-annotations-0.5.0.jar":"System Classpath","/usr/local/spark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/usr/local/spark/jars/arrow-vector-12.0.1.jar":"System Classpath","/usr/local/spark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/usr/local/spark/conf/":"System Classpath","/usr/local/spark/jars/orc-shims-1.9.1.jar":"System Classpath","/usr/local/spark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/usr/local/spark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/usr/local/spark/jars/jackson-databind-2.15.2.jar":"System Classpath","/usr/local/spark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/usr/local/spark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/usr/local/spark/jars/activation-1.1.1.jar":"System Classpath","/usr/local/spark/jars/aircompressor-0.25.jar":"System Classpath","/usr/local/spark/jars/snappy-java-1.1.10.3.jar":"System Classpath","/usr/local/spark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/usr/local/spark/jars/commons-pool-1.5.4.jar":"System Classpath","/usr/local/spark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/hk2-utils-2.6.1.jar":"System Classpath","/usr/local/spark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","/usr/local/spark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/usr/local/spark/jars/xz-1.9.jar":"System Classpath","/usr/local/spark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","/usr/local/spark/jars/lz4-java-1.8.0.jar":"System Classpath","/usr/local/spark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/usr/local/spark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/commons-compiler-3.1.9.jar":"System Classpath","/usr/local/spark/jars/JTransforms-3.1.jar":"System Classpath","/usr/local/spark/jars/shims-0.9.45.jar":"System Classpath","/usr/local/spark/jars/okhttp-3.12.12.jar":"System Classpath","/usr/local/spark/jars/JLargeArrays-1.5.jar":"System Classpath","/usr/local/spark/jars/spark-hive-thriftserver_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/spark-catalyst_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/parquet-common-1.13.1.jar":"System Classpath","/usr/local/spark/jars/spark-kubernetes_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/hive-cli-2.3.9.jar":"System Classpath","/usr/local/spark/jars/datasketches-java-3.3.0.jar":"System Classpath","/usr/local/spark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/usr/local/spark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/usr/local/spark/jars/jersey-client-2.40.jar":"System Classpath","/usr/local/spark/jars/stream-2.9.6.jar":"System Classpath","/usr/local/spark/jars/httpclient-4.5.14.jar":"System Classpath","/usr/local/spark/jars/spark-sketch_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/usr/local/spark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/usr/local/spark/jars/spark-network-shuffle_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/usr/local/spark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/usr/local/spark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","/usr/local/spark/jars/janino-3.1.9.jar":"System Classpath","/usr/local/spark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/usr/local/spark/jars/joda-time-2.12.5.jar":"System Classpath","/usr/local/spark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/usr/local/spark/jars/commons-crypto-1.1.0.jar":"System Classpath","/usr/local/spark/jars/scala-reflect-2.12.18.jar":"System Classpath","/usr/local/spark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/usr/local/spark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","/usr/local/spark/jars/spark-tags_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/parquet-column-1.13.1.jar":"System Classpath","/usr/local/spark/jars/spire_2.12-0.17.0.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/usr/local/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/usr/local/spark/jars/oro-2.0.8.jar":"System Classpath","/usr/local/spark/jars/orc-mapreduce-1.9.1-shaded-protobuf.jar":"System Classpath","/usr/local/spark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/usr/local/spark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/usr/local/spark/jars/scala-compiler-2.12.18.jar":"System Classpath","/usr/local/spark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","/usr/local/spark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/usr/local/spark/jars/curator-recipes-2.13.0.jar":"System Classpath","/usr/local/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","/usr/local/spark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/usr/local/spark/jars/commons-lang3-3.12.0.jar":"System Classpath","/usr/local/spark/jars/spark-kvstore_2.12-3.5.0.jar":"System Classpath","/usr/local/spark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/usr/local/spark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/usr/local/spark/jars/ivy-2.5.1.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"SparkExample","App ID":"local-1707201178077","Timestamp":1707201177269,"User":"jovyan"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"csv at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Filter (2)\n   +- Scan text  (1)\n\n\n(1) Scan text \nOutput [1]: [value#0]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv]\nReadSchema: struct<value:string>\n\n(2) Filter [codegen id : 1]\nInput [1]: [value#0]\nCondition : (length(trim(value#0, None)) > 0)\n\n(3) CollectLimit\nInput [1]: [value#0]\nArguments: 1\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter (length(trim(value#0, None)) > 0)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan text ","simpleString":"FileScan text [value#0] Batched: false, DataFilters: [(length(trim(value#0, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv]","ReadSchema":"struct<value:string>","Format":"Text","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[(length(trim(value#0, None)) > 0)]"},"metrics":[{"name":"number of output rows","accumulatorId":23,"metricType":"sum"},{"name":"number of files read","accumulatorId":24,"metricType":"sum"},{"name":"metadata time","accumulatorId":25,"metricType":"timing"},{"name":"size of files read","accumulatorId":26,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":22,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":21,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":19,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":13,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":20,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":14,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":11,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":8,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":17,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":10,"metricType":"sum"},{"name":"records read","accumulatorId":7,"metricType":"sum"},{"name":"local bytes read","accumulatorId":5,"metricType":"size"},{"name":"fetch wait time","accumulatorId":6,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":3,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":9,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":12,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":15,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":16,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":4,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":18,"metricType":"size"}]},"time":1707201198132,"modifiedConfigs":{},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[24,1],[25,2],[26,106039]]}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1707201198687,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"0","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"0","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707201198706,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"0","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"0","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707201198799,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707201198799,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707201200424,"Failed":false,"Killed":false,"Accumulables":[{"ID":22,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":27,"Name":"internal.metrics.executorDeserializeTime","Update":75,"Value":75,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorDeserializeCpuTime","Update":69176419,"Value":69176419,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.executorRunTime","Update":1511,"Value":1511,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.executorCpuTime","Update":110656090,"Value":110656090,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSize","Update":1765,"Value":1765,"Internal":true,"Count Failed Values":true},{"ID":32,"Name":"internal.metrics.jvmGCTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":33,"Name":"internal.metrics.resultSerializationTime","Update":12,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.input.bytesRead","Update":65536,"Value":65536,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":75,"Executor Deserialize CPU Time":69176419,"Executor Run Time":1511,"Executor CPU Time":110656090,"Peak Execution Memory":0,"Result Size":1765,"JVM GC Time":8,"Result Serialization Time":12,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":65536,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707201198706,"Completion Time":1707201200433,"Accumulables":[{"ID":22,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":27,"Name":"internal.metrics.executorDeserializeTime","Value":75,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorDeserializeCpuTime","Value":69176419,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.executorRunTime","Value":1511,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.executorCpuTime","Value":110656090,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSize","Value":1765,"Internal":true,"Count Failed Values":true},{"ID":32,"Name":"internal.metrics.jvmGCTime","Value":8,"Internal":true,"Count Failed Values":true},{"ID":33,"Name":"internal.metrics.resultSerializationTime","Value":12,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.input.bytesRead","Value":65536,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1707201200435,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1707201200453,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1707201200578,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"12\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"13\",\"name\":\"aggregate\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"12\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707201200579,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"13\",\"name\":\"aggregate\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707201200604,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707201200604,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707201200786,"Failed":false,"Killed":false,"Accumulables":[{"ID":62,"Name":"number of output rows","Update":"1220","Value":"1220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":66,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":67,"Name":"internal.metrics.executorDeserializeCpuTime","Update":22189999,"Value":22189999,"Internal":true,"Count Failed Values":true},{"ID":68,"Name":"internal.metrics.executorRunTime","Update":128,"Value":128,"Internal":true,"Count Failed Values":true},{"ID":69,"Name":"internal.metrics.executorCpuTime","Update":74200368,"Value":74200368,"Internal":true,"Count Failed Values":true},{"ID":70,"Name":"internal.metrics.resultSize","Update":1694,"Value":1694,"Internal":true,"Count Failed Values":true},{"ID":71,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":97,"Name":"internal.metrics.input.bytesRead","Update":106039,"Value":106039,"Internal":true,"Count Failed Values":true},{"ID":98,"Name":"internal.metrics.input.recordsRead","Update":1220,"Value":1220,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":22189999,"Executor Run Time":128,"Executor CPU Time":74200368,"Peak Execution Memory":0,"Result Size":1694,"JVM GC Time":7,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":106039,"Records Read":1220},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"12\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707201200579,"Completion Time":1707201200790,"Accumulables":[{"ID":62,"Name":"number of output rows","Value":"1220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":66,"Name":"internal.metrics.executorDeserializeTime","Value":34,"Internal":true,"Count Failed Values":true},{"ID":67,"Name":"internal.metrics.executorDeserializeCpuTime","Value":22189999,"Internal":true,"Count Failed Values":true},{"ID":68,"Name":"internal.metrics.executorRunTime","Value":128,"Internal":true,"Count Failed Values":true},{"ID":69,"Name":"internal.metrics.executorCpuTime","Value":74200368,"Internal":true,"Count Failed Values":true},{"ID":70,"Name":"internal.metrics.resultSize","Value":1694,"Internal":true,"Count Failed Values":true},{"ID":71,"Name":"internal.metrics.jvmGCTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.resultSerializationTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":97,"Name":"internal.metrics.input.bytesRead","Value":106039,"Internal":true,"Count Failed Values":true},{"ID":98,"Name":"internal.metrics.input.recordsRead","Value":1220,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1707201200790,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":1,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Project (2)\n   +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [10]: [Date#17, ClosingPrice#18, Change#19, Trading Volume(shr)#20, Trading Value(KHR)#21, Opening#22, High#23, Low#24, MarketCap.(Mil.KHR)#25, Full Market Cap. (Mil.KHR)#26]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(2) Project [codegen id : 1]\nOutput [10]: [toprettystring(Date#17, Some(Etc/UTC)) AS toprettystring(Date)#47, toprettystring(ClosingPrice#18, Some(Etc/UTC)) AS toprettystring(ClosingPrice)#48, toprettystring(Change#19, Some(Etc/UTC)) AS toprettystring(Change)#49, toprettystring(Trading Volume(shr)#20, Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#50, toprettystring(Trading Value(KHR)#21, Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#51, toprettystring(Opening#22, Some(Etc/UTC)) AS toprettystring(Opening)#52, toprettystring(High#23, Some(Etc/UTC)) AS toprettystring(High)#53, toprettystring(Low#24, Some(Etc/UTC)) AS toprettystring(Low)#54, toprettystring(MarketCap.(Mil.KHR)#25, Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#55, toprettystring(Full Market Cap. (Mil.KHR)#26, Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#56]\nInput [10]: [Date#17, ClosingPrice#18, Change#19, Trading Volume(shr)#20, Trading Value(KHR)#21, Opening#22, High#23, Low#24, MarketCap.(Mil.KHR)#25, Full Market Cap. (Mil.KHR)#26]\n\n(3) CollectLimit\nInput [10]: [toprettystring(Date)#47, toprettystring(ClosingPrice)#48, toprettystring(Change)#49, toprettystring(Trading Volume(shr))#50, toprettystring(Trading Value(KHR))#51, toprettystring(Opening)#52, toprettystring(High)#53, toprettystring(Low)#54, toprettystring(MarketCap.(Mil.KHR))#55, toprettystring(Full Market Cap. (Mil.KHR))#56]\nArguments: 21\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(Date#17, Some(Etc/UTC)) AS toprettystring(Date)#47, toprettystring(ClosingPrice#18, Some(Etc/UTC)) AS toprettystring(ClosingPrice)#48, toprettystring(Change#19, Some(Etc/UTC)) AS toprettystring(Change)#49, toprettystring(Trading Volume(shr)#20, Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#50, toprettystring(Trading Value(KHR)#21, Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#51, toprettystring(Opening#22, Some(Etc/UTC)) AS toprettystring(Opening)#52, toprettystring(High#23, Some(Etc/UTC)) AS toprettystring(High)#53, toprettystring(Low#24, Some(Etc/UTC)) AS toprettystring(Low)#54, toprettystring(MarketCap.(Mil.KHR)#25, Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#55, toprettystring(Full Market Cap. (Mil.KHR)#26, Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#56]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#17,ClosingPrice#18,Change#19,Trading Volume(shr)#20,Trading Value(KHR)#21,Opening#22,High#23,Low#24,MarketCap.(Mil.KHR)#25,Full Market Cap. (Mil.KHR)#26] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":122,"metricType":"sum"},{"name":"number of files read","accumulatorId":123,"metricType":"sum"},{"name":"metadata time","accumulatorId":124,"metricType":"timing"},{"name":"size of files read","accumulatorId":125,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":121,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":119,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":113,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":120,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":114,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":111,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":108,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":117,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":110,"metricType":"sum"},{"name":"records read","accumulatorId":107,"metricType":"sum"},{"name":"local bytes read","accumulatorId":105,"metricType":"size"},{"name":"fetch wait time","accumulatorId":106,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":103,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":109,"metricType":"sum"},{"name":"local blocks read","accumulatorId":102,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":112,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":101,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":115,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":116,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":104,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":118,"metricType":"size"}]},"time":1707201200841,"modifiedConfigs":{},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[123,1],[124,0],[125,106039]]}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1707201200949,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"FileScanRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"1","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"1","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"FileScanRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707201200950,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"1","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"1","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707201200964,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707201200964,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707201201079,"Failed":false,"Killed":false,"Accumulables":[{"ID":122,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":126,"Name":"internal.metrics.executorDeserializeTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":127,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5461749,"Value":5461749,"Internal":true,"Count Failed Values":true},{"ID":128,"Name":"internal.metrics.executorRunTime","Update":101,"Value":101,"Internal":true,"Count Failed Values":true},{"ID":129,"Name":"internal.metrics.executorCpuTime","Update":56395915,"Value":56395915,"Internal":true,"Count Failed Values":true},{"ID":130,"Name":"internal.metrics.resultSize","Update":2575,"Value":2575,"Internal":true,"Count Failed Values":true},{"ID":157,"Name":"internal.metrics.input.bytesRead","Update":65536,"Value":65536,"Internal":true,"Count Failed Values":true},{"ID":158,"Name":"internal.metrics.input.recordsRead","Update":21,"Value":21,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":8,"Executor Deserialize CPU Time":5461749,"Executor Run Time":101,"Executor CPU Time":56395915,"Peak Execution Memory":0,"Result Size":2575,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":65536,"Records Read":21},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"FileScanRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707201200950,"Completion Time":1707201201080,"Accumulables":[{"ID":122,"Name":"number of output rows","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":126,"Name":"internal.metrics.executorDeserializeTime","Value":8,"Internal":true,"Count Failed Values":true},{"ID":127,"Name":"internal.metrics.executorDeserializeCpuTime","Value":5461749,"Internal":true,"Count Failed Values":true},{"ID":128,"Name":"internal.metrics.executorRunTime","Value":101,"Internal":true,"Count Failed Values":true},{"ID":129,"Name":"internal.metrics.executorCpuTime","Value":56395915,"Internal":true,"Count Failed Values":true},{"ID":130,"Name":"internal.metrics.resultSize","Value":2575,"Internal":true,"Count Failed Values":true},{"ID":157,"Name":"internal.metrics.input.bytesRead","Value":65536,"Internal":true,"Count Failed Values":true},{"ID":158,"Name":"internal.metrics.input.recordsRead","Value":21,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1707201201080,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1707201201101,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":2,"description":"csv at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Filter (2)\n   +- Scan text  (1)\n\n\n(1) Scan text \nOutput [1]: [value#89]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv]\nReadSchema: struct<value:string>\n\n(2) Filter [codegen id : 1]\nInput [1]: [value#89]\nCondition : (length(trim(value#89, None)) > 0)\n\n(3) CollectLimit\nInput [1]: [value#89]\nArguments: 1\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter (length(trim(value#89, None)) > 0)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan text ","simpleString":"FileScan text [value#89] Batched: false, DataFilters: [(length(trim(value#89, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv]","ReadSchema":"struct<value:string>","Format":"Text","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[(length(trim(value#89, None)) > 0)]"},"metrics":[{"name":"number of output rows","accumulatorId":183,"metricType":"sum"},{"name":"number of files read","accumulatorId":184,"metricType":"sum"},{"name":"metadata time","accumulatorId":185,"metricType":"timing"},{"name":"size of files read","accumulatorId":186,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":182,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":181,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":179,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":173,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":180,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":174,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":171,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":168,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":177,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":170,"metricType":"sum"},{"name":"records read","accumulatorId":167,"metricType":"sum"},{"name":"local bytes read","accumulatorId":165,"metricType":"size"},{"name":"fetch wait time","accumulatorId":166,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":163,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":169,"metricType":"sum"},{"name":"local blocks read","accumulatorId":162,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":172,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":161,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":175,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":176,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":164,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":178,"metricType":"size"}]},"time":1707202301715,"modifiedConfigs":{},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[184,1],[185,0],[186,106039]]}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1707202301763,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"32\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"FileScanRDD","Scope":"{\"id\":\"32\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"2","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"2","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"32\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"FileScanRDD","Scope":"{\"id\":\"32\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202301766,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"2","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"2","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202301810,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202301810,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707202301911,"Failed":false,"Killed":false,"Accumulables":[{"ID":182,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":183,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":187,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":188,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8629332,"Value":8629332,"Internal":true,"Count Failed Values":true},{"ID":189,"Name":"internal.metrics.executorRunTime","Update":81,"Value":81,"Internal":true,"Count Failed Values":true},{"ID":190,"Name":"internal.metrics.executorCpuTime","Update":13821167,"Value":13821167,"Internal":true,"Count Failed Values":true},{"ID":191,"Name":"internal.metrics.resultSize","Update":1679,"Value":1679,"Internal":true,"Count Failed Values":true},{"ID":218,"Name":"internal.metrics.input.bytesRead","Update":65536,"Value":65536,"Internal":true,"Count Failed Values":true},{"ID":219,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":8629332,"Executor Run Time":81,"Executor CPU Time":13821167,"Peak Execution Memory":0,"Result Size":1679,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":65536,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"32\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"FileScanRDD","Scope":"{\"id\":\"32\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202301766,"Completion Time":1707202301913,"Accumulables":[{"ID":182,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":183,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":187,"Name":"internal.metrics.executorDeserializeTime","Value":9,"Internal":true,"Count Failed Values":true},{"ID":188,"Name":"internal.metrics.executorDeserializeCpuTime","Value":8629332,"Internal":true,"Count Failed Values":true},{"ID":189,"Name":"internal.metrics.executorRunTime","Value":81,"Internal":true,"Count Failed Values":true},{"ID":190,"Name":"internal.metrics.executorCpuTime","Value":13821167,"Internal":true,"Count Failed Values":true},{"ID":191,"Name":"internal.metrics.resultSize","Value":1679,"Internal":true,"Count Failed Values":true},{"ID":218,"Name":"internal.metrics.input.bytesRead","Value":65536,"Internal":true,"Count Failed Values":true},{"ID":219,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1707202301914,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1707202301917,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1707202301948,"Stage Infos":[{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"41\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"39\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"FileScanRDD","Scope":"{\"id\":\"39\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"40\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[4],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"42\",\"name\":\"aggregate\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"41\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"39\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"FileScanRDD","Scope":"{\"id\":\"39\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"40\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202301949,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"42\",\"name\":\"aggregate\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202301959,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202301959,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707202302045,"Failed":false,"Killed":false,"Accumulables":[{"ID":222,"Name":"number of output rows","Update":"1220","Value":"1220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":226,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":227,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14797627,"Value":14797627,"Internal":true,"Count Failed Values":true},{"ID":228,"Name":"internal.metrics.executorRunTime","Update":56,"Value":56,"Internal":true,"Count Failed Values":true},{"ID":229,"Name":"internal.metrics.executorCpuTime","Update":20223332,"Value":20223332,"Internal":true,"Count Failed Values":true},{"ID":230,"Name":"internal.metrics.resultSize","Update":1651,"Value":1651,"Internal":true,"Count Failed Values":true},{"ID":232,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":257,"Name":"internal.metrics.input.bytesRead","Update":106039,"Value":106039,"Internal":true,"Count Failed Values":true},{"ID":258,"Name":"internal.metrics.input.recordsRead","Update":1220,"Value":1220,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":14797627,"Executor Run Time":56,"Executor CPU Time":20223332,"Peak Execution Memory":0,"Result Size":1651,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":106039,"Records Read":1220},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"41\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"39\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"FileScanRDD","Scope":"{\"id\":\"39\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"40\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202301949,"Completion Time":1707202302047,"Accumulables":[{"ID":222,"Name":"number of output rows","Value":"1220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":226,"Name":"internal.metrics.executorDeserializeTime","Value":21,"Internal":true,"Count Failed Values":true},{"ID":227,"Name":"internal.metrics.executorDeserializeCpuTime","Value":14797627,"Internal":true,"Count Failed Values":true},{"ID":228,"Name":"internal.metrics.executorRunTime","Value":56,"Internal":true,"Count Failed Values":true},{"ID":229,"Name":"internal.metrics.executorCpuTime","Value":20223332,"Internal":true,"Count Failed Values":true},{"ID":230,"Name":"internal.metrics.resultSize","Value":1651,"Internal":true,"Count Failed Values":true},{"ID":232,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":257,"Name":"internal.metrics.input.bytesRead","Value":106039,"Internal":true,"Count Failed Values":true},{"ID":258,"Name":"internal.metrics.input.recordsRead","Value":1220,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1707202302047,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":3,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Project (2)\n   +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [10]: [Date#106, ClosingPrice#107, Change#108, Trading Volume(shr)#109, Trading Value(KHR)#110, Opening#111, High#112, Low#113, MarketCap.(Mil.KHR)#114, Full Market Cap. (Mil.KHR)#115]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(2) Project [codegen id : 1]\nOutput [10]: [toprettystring(Date#106, Some(Etc/UTC)) AS toprettystring(Date)#136, toprettystring(ClosingPrice#107, Some(Etc/UTC)) AS toprettystring(ClosingPrice)#137, toprettystring(Change#108, Some(Etc/UTC)) AS toprettystring(Change)#138, toprettystring(Trading Volume(shr)#109, Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#139, toprettystring(Trading Value(KHR)#110, Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#140, toprettystring(Opening#111, Some(Etc/UTC)) AS toprettystring(Opening)#141, toprettystring(High#112, Some(Etc/UTC)) AS toprettystring(High)#142, toprettystring(Low#113, Some(Etc/UTC)) AS toprettystring(Low)#143, toprettystring(MarketCap.(Mil.KHR)#114, Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#144, toprettystring(Full Market Cap. (Mil.KHR)#115, Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#145]\nInput [10]: [Date#106, ClosingPrice#107, Change#108, Trading Volume(shr)#109, Trading Value(KHR)#110, Opening#111, High#112, Low#113, MarketCap.(Mil.KHR)#114, Full Market Cap. (Mil.KHR)#115]\n\n(3) CollectLimit\nInput [10]: [toprettystring(Date)#136, toprettystring(ClosingPrice)#137, toprettystring(Change)#138, toprettystring(Trading Volume(shr))#139, toprettystring(Trading Value(KHR))#140, toprettystring(Opening)#141, toprettystring(High)#142, toprettystring(Low)#143, toprettystring(MarketCap.(Mil.KHR))#144, toprettystring(Full Market Cap. (Mil.KHR))#145]\nArguments: 6\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 6","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(Date#106, Some(Etc/UTC)) AS toprettystring(Date)#136, toprettystring(ClosingPrice#107, Some(Etc/UTC)) AS toprettystring(ClosingPrice)#137, toprettystring(Change#108, Some(Etc/UTC)) AS toprettystring(Change)#138, toprettystring(Trading Volume(shr)#109, Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#139, toprettystring(Trading Value(KHR)#110, Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#140, toprettystring(Opening#111, Some(Etc/UTC)) AS toprettystring(Opening)#141, toprettystring(High#112, Some(Etc/UTC)) AS toprettystring(High)#142, toprettystring(Low#113, Some(Etc/UTC)) AS toprettystring(Low)#143, toprettystring(MarketCap.(Mil.KHR)#114, Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#144, toprettystring(Full Market Cap. (Mil.KHR)#115, Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#145]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#106,ClosingPrice#107,Change#108,Trading Volume(shr)#109,Trading Value(KHR)#110,Opening#111,High#112,Low#113,MarketCap.(Mil.KHR)#114,Full Market Cap. (Mil.KHR)#115] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":282,"metricType":"sum"},{"name":"number of files read","accumulatorId":283,"metricType":"sum"},{"name":"metadata time","accumulatorId":284,"metricType":"timing"},{"name":"size of files read","accumulatorId":285,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":281,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":279,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":273,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":280,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":274,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":271,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":268,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":277,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":270,"metricType":"sum"},{"name":"records read","accumulatorId":267,"metricType":"sum"},{"name":"local bytes read","accumulatorId":265,"metricType":"size"},{"name":"fetch wait time","accumulatorId":266,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":263,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":269,"metricType":"sum"},{"name":"local blocks read","accumulatorId":262,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":272,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":261,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":275,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":276,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":264,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":278,"metricType":"size"}]},"time":1707202302100,"modifiedConfigs":{},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[283,1],[284,0],[285,106039]]}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1707202302132,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"3","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"3","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202302133,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"3","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"3","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202302146,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202302146,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707202302185,"Failed":false,"Killed":false,"Accumulables":[{"ID":282,"Name":"number of output rows","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":286,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3021792,"Value":3021792,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.executorRunTime","Update":33,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.executorCpuTime","Update":14406082,"Value":14406082,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.resultSize","Update":1882,"Value":1882,"Internal":true,"Count Failed Values":true},{"ID":317,"Name":"internal.metrics.input.bytesRead","Update":65536,"Value":65536,"Internal":true,"Count Failed Values":true},{"ID":318,"Name":"internal.metrics.input.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3021792,"Executor Run Time":33,"Executor CPU Time":14406082,"Peak Execution Memory":0,"Result Size":1882,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":65536,"Records Read":6},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202302133,"Completion Time":1707202302186,"Accumulables":[{"ID":282,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":286,"Name":"internal.metrics.executorDeserializeTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.executorDeserializeCpuTime","Value":3021792,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.executorRunTime","Value":33,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.executorCpuTime","Value":14406082,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.resultSize","Value":1882,"Internal":true,"Count Failed Values":true},{"ID":317,"Name":"internal.metrics.input.bytesRead","Value":65536,"Internal":true,"Count Failed Values":true},{"ID":318,"Name":"internal.metrics.input.recordsRead","Value":6,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1707202302186,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1707202302189,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":4,"description":"csv at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Filter (2)\n   +- Scan text  (1)\n\n\n(1) Scan text \nOutput [1]: [value#178]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv]\nReadSchema: struct<value:string>\n\n(2) Filter [codegen id : 1]\nInput [1]: [value#178]\nCondition : (length(trim(value#178, None)) > 0)\n\n(3) CollectLimit\nInput [1]: [value#178]\nArguments: 1\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter (length(trim(value#178, None)) > 0)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan text ","simpleString":"FileScan text [value#178] Batched: false, DataFilters: [(length(trim(value#178, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv]","ReadSchema":"struct<value:string>","Format":"Text","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[(length(trim(value#178, None)) > 0)]"},"metrics":[{"name":"number of output rows","accumulatorId":343,"metricType":"sum"},{"name":"number of files read","accumulatorId":344,"metricType":"sum"},{"name":"metadata time","accumulatorId":345,"metricType":"timing"},{"name":"size of files read","accumulatorId":346,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":342,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":341,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":339,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":333,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":340,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":334,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":331,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":328,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":337,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":330,"metricType":"sum"},{"name":"records read","accumulatorId":327,"metricType":"sum"},{"name":"local bytes read","accumulatorId":325,"metricType":"size"},{"name":"fetch wait time","accumulatorId":326,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":323,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":329,"metricType":"sum"},{"name":"local blocks read","accumulatorId":322,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":332,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":321,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":335,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":336,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":324,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":338,"metricType":"size"}]},"time":1707202656266,"modifiedConfigs":{"spark.app.name":"StockPrediction"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":4,"accumUpdates":[[344,1],[345,0],[346,106039]]}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1707202656302,"Stage Infos":[{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"61\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[6],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"4","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"4","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"61\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202656306,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"4","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"4","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202656348,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202656348,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707202656429,"Failed":false,"Killed":false,"Accumulables":[{"ID":342,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":343,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":347,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3394083,"Value":3394083,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.executorRunTime","Update":71,"Value":71,"Internal":true,"Count Failed Values":true},{"ID":350,"Name":"internal.metrics.executorCpuTime","Update":9025122,"Value":9025122,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.resultSize","Update":1679,"Value":1679,"Internal":true,"Count Failed Values":true},{"ID":378,"Name":"internal.metrics.input.bytesRead","Update":65536,"Value":65536,"Internal":true,"Count Failed Values":true},{"ID":379,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3394083,"Executor Run Time":71,"Executor CPU Time":9025122,"Peak Execution Memory":0,"Result Size":1679,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":65536,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"61\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202656306,"Completion Time":1707202656430,"Accumulables":[{"ID":342,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":343,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":347,"Name":"internal.metrics.executorDeserializeTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.executorDeserializeCpuTime","Value":3394083,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.executorRunTime","Value":71,"Internal":true,"Count Failed Values":true},{"ID":350,"Name":"internal.metrics.executorCpuTime","Value":9025122,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.resultSize","Value":1679,"Internal":true,"Count Failed Values":true},{"ID":378,"Name":"internal.metrics.input.bytesRead","Value":65536,"Internal":true,"Count Failed Values":true},{"ID":379,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1707202656430,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1707202656433,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":7,"Submission Time":1707202656470,"Stage Infos":[{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"FileScanRDD","Scope":"{\"id\":\"68\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"68\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"67\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"69\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[7],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"71\",\"name\":\"aggregate\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"FileScanRDD","Scope":"{\"id\":\"68\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"68\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"67\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"69\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202656471,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"71\",\"name\":\"aggregate\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":7,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202656480,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":7,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202656480,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707202656550,"Failed":false,"Killed":false,"Accumulables":[{"ID":382,"Name":"number of output rows","Update":"1220","Value":"1220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":386,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":387,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3232958,"Value":3232958,"Internal":true,"Count Failed Values":true},{"ID":388,"Name":"internal.metrics.executorRunTime","Update":64,"Value":64,"Internal":true,"Count Failed Values":true},{"ID":389,"Name":"internal.metrics.executorCpuTime","Update":11833623,"Value":11833623,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.resultSize","Update":1608,"Value":1608,"Internal":true,"Count Failed Values":true},{"ID":417,"Name":"internal.metrics.input.bytesRead","Update":106039,"Value":106039,"Internal":true,"Count Failed Values":true},{"ID":418,"Name":"internal.metrics.input.recordsRead","Update":1220,"Value":1220,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3232958,"Executor Run Time":64,"Executor CPU Time":11833623,"Peak Execution Memory":0,"Result Size":1608,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":106039,"Records Read":1220},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"FileScanRDD","Scope":"{\"id\":\"68\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"68\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"67\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"69\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202656471,"Completion Time":1707202656552,"Accumulables":[{"ID":382,"Name":"number of output rows","Value":"1220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":386,"Name":"internal.metrics.executorDeserializeTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":387,"Name":"internal.metrics.executorDeserializeCpuTime","Value":3232958,"Internal":true,"Count Failed Values":true},{"ID":388,"Name":"internal.metrics.executorRunTime","Value":64,"Internal":true,"Count Failed Values":true},{"ID":389,"Name":"internal.metrics.executorCpuTime","Value":11833623,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.resultSize","Value":1608,"Internal":true,"Count Failed Values":true},{"ID":417,"Name":"internal.metrics.input.bytesRead","Value":106039,"Internal":true,"Count Failed Values":true},{"ID":418,"Name":"internal.metrics.input.recordsRead","Value":1220,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":7,"Completion Time":1707202656552,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":5,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Project (2)\n   +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(2) Project [codegen id : 1]\nOutput [10]: [toprettystring(Date#195, Some(Etc/UTC)) AS toprettystring(Date)#225, toprettystring(ClosingPrice#196, Some(Etc/UTC)) AS toprettystring(ClosingPrice)#226, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#227, toprettystring(Trading Volume(shr)#198, Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#228, toprettystring(Trading Value(KHR)#199, Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#229, toprettystring(Opening#200, Some(Etc/UTC)) AS toprettystring(Opening)#230, toprettystring(High#201, Some(Etc/UTC)) AS toprettystring(High)#231, toprettystring(Low#202, Some(Etc/UTC)) AS toprettystring(Low)#232, toprettystring(MarketCap.(Mil.KHR)#203, Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#233, toprettystring(Full Market Cap. (Mil.KHR)#204, Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#234]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(3) CollectLimit\nInput [10]: [toprettystring(Date)#225, toprettystring(ClosingPrice)#226, toprettystring(Change)#227, toprettystring(Trading Volume(shr))#228, toprettystring(Trading Value(KHR))#229, toprettystring(Opening)#230, toprettystring(High)#231, toprettystring(Low)#232, toprettystring(MarketCap.(Mil.KHR))#233, toprettystring(Full Market Cap. (Mil.KHR))#234]\nArguments: 6\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 6","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(Date#195, Some(Etc/UTC)) AS toprettystring(Date)#225, toprettystring(ClosingPrice#196, Some(Etc/UTC)) AS toprettystring(ClosingPrice)#226, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#227, toprettystring(Trading Volume(shr)#198, Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#228, toprettystring(Trading Value(KHR)#199, Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#229, toprettystring(Opening#200, Some(Etc/UTC)) AS toprettystring(Opening)#230, toprettystring(High#201, Some(Etc/UTC)) AS toprettystring(High)#231, toprettystring(Low#202, Some(Etc/UTC)) AS toprettystring(Low)#232, toprettystring(MarketCap.(Mil.KHR)#203, Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#233, toprettystring(Full Market Cap. (Mil.KHR)#204, Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#234]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":442,"metricType":"sum"},{"name":"number of files read","accumulatorId":443,"metricType":"sum"},{"name":"metadata time","accumulatorId":444,"metricType":"timing"},{"name":"size of files read","accumulatorId":445,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":441,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":439,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":433,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":440,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":434,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":431,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":428,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":437,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":430,"metricType":"sum"},{"name":"records read","accumulatorId":427,"metricType":"sum"},{"name":"local bytes read","accumulatorId":425,"metricType":"size"},{"name":"fetch wait time","accumulatorId":426,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":423,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":429,"metricType":"sum"},{"name":"local blocks read","accumulatorId":422,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":432,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":421,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":435,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":436,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":424,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":438,"metricType":"size"}]},"time":1707202656583,"modifiedConfigs":{"spark.app.name":"StockPrediction"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[443,1],[444,0],[445,106039]]}
{"Event":"SparkListenerJobStart","Job ID":8,"Submission Time":1707202656616,"Stage Infos":[{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"78\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"FileScanRDD","Scope":"{\"id\":\"81\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[8],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"5","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"5","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"78\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"FileScanRDD","Scope":"{\"id\":\"81\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202656617,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"5","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"5","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202656624,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707202656624,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707202656705,"Failed":false,"Killed":false,"Accumulables":[{"ID":442,"Name":"number of output rows","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":446,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":447,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2030333,"Value":2030333,"Internal":true,"Count Failed Values":true},{"ID":448,"Name":"internal.metrics.executorRunTime","Update":76,"Value":76,"Internal":true,"Count Failed Values":true},{"ID":449,"Name":"internal.metrics.executorCpuTime","Update":10746209,"Value":10746209,"Internal":true,"Count Failed Values":true},{"ID":450,"Name":"internal.metrics.resultSize","Update":1882,"Value":1882,"Internal":true,"Count Failed Values":true},{"ID":477,"Name":"internal.metrics.input.bytesRead","Update":65536,"Value":65536,"Internal":true,"Count Failed Values":true},{"ID":478,"Name":"internal.metrics.input.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":2030333,"Executor Run Time":76,"Executor CPU Time":10746209,"Peak Execution Memory":0,"Result Size":1882,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":65536,"Records Read":6},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"78\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"FileScanRDD","Scope":"{\"id\":\"81\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707202656617,"Completion Time":1707202656706,"Accumulables":[{"ID":442,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":446,"Name":"internal.metrics.executorDeserializeTime","Value":2,"Internal":true,"Count Failed Values":true},{"ID":447,"Name":"internal.metrics.executorDeserializeCpuTime","Value":2030333,"Internal":true,"Count Failed Values":true},{"ID":448,"Name":"internal.metrics.executorRunTime","Value":76,"Internal":true,"Count Failed Values":true},{"ID":449,"Name":"internal.metrics.executorCpuTime","Value":10746209,"Internal":true,"Count Failed Values":true},{"ID":450,"Name":"internal.metrics.resultSize","Value":1882,"Internal":true,"Count Failed Values":true},{"ID":477,"Name":"internal.metrics.input.bytesRead","Value":65536,"Internal":true,"Count Failed Values":true},{"ID":478,"Name":"internal.metrics.input.recordsRead","Value":6,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":8,"Completion Time":1707202656706,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1707202656709,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":6,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- TakeOrderedAndProject (9)\n   +- Filter (8)\n      +- InMemoryTableScan (1)\n            +- InMemoryRelation (2)\n                  +- AdaptiveSparkPlan (7)\n                     +- Sort (6)\n                        +- Exchange (5)\n                           +- Project (4)\n                              +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=115]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) Filter\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(9) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#513, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#514, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#515, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#516, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#517, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#518, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#519, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#520, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#521, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#522]\n\n(10) AdaptiveSparkPlan\nOutput [10]: [toprettystring(Date)#513, toprettystring(ClosingPrice)#514, toprettystring(Change)#515, toprettystring(Trading Volume(shr))#516, toprettystring(Trading Value(KHR))#517, toprettystring(Opening)#518, toprettystring(High)#519, toprettystring(Low)#520, toprettystring(MarketCap.(Mil.KHR))#521, toprettystring(Full Market Cap. (Mil.KHR))#522]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=21, orderBy=[Date#267 ASC NULLS FIRST], output=[toprettystring(Date)#513,toprettystring(ClosingPrice)#514,toprettystring(Change)#515,toprettystring(Trading Volume(shr))#516,toprettystring(Trading Value(KHR))#517,toprettystring(Opening)#518,toprettystring(High)#519,toprettystring(Low)#520,toprettystring(MarketCap.(Mil.KHR))#521,toprettystring(Full Market Cap. (Mil.KHR))#522])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":529,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":523,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":530,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":524,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":521,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":518,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":527,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":520,"metricType":"sum"},{"name":"records read","accumulatorId":517,"metricType":"sum"},{"name":"local bytes read","accumulatorId":515,"metricType":"size"},{"name":"fetch wait time","accumulatorId":516,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":513,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":519,"metricType":"sum"},{"name":"local blocks read","accumulatorId":512,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":522,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":511,"metricType":"sum"},{"name":"data size","accumulatorId":509,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":525,"metricType":"size"},{"name":"number of partitions","accumulatorId":510,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":526,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":514,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":528,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":506,"metricType":"timing"},{"name":"peak memory","accumulatorId":507,"metricType":"size"},{"name":"spill size","accumulatorId":508,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":505,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":504,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":502,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":496,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":503,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":497,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":494,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":491,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":500,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":493,"metricType":"sum"},{"name":"records read","accumulatorId":490,"metricType":"sum"},{"name":"local bytes read","accumulatorId":488,"metricType":"size"},{"name":"fetch wait time","accumulatorId":489,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":486,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":492,"metricType":"sum"},{"name":"local blocks read","accumulatorId":485,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":495,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":484,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":498,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":499,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":487,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":501,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1707203226663,"modifiedConfigs":{"spark.app.name":"StockPrediction"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- == Current Plan ==\n   TakeOrderedAndProject (10)\n   +- Filter (9)\n      +- TableCacheQueryStage (8)\n         +- InMemoryTableScan (1)\n               +- InMemoryRelation (2)\n                     +- AdaptiveSparkPlan (7)\n                        +- Sort (6)\n                           +- Exchange (5)\n                              +- Project (4)\n                                 +- Scan csv  (3)\n+- == Initial Plan ==\n   TakeOrderedAndProject (12)\n   +- Filter (11)\n      +- InMemoryTableScan (1)\n            +- InMemoryRelation (2)\n                  +- AdaptiveSparkPlan (7)\n                     +- Sort (6)\n                        +- Exchange (5)\n                           +- Project (4)\n                              +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=115]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 0\n\n(9) Filter\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(10) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#513, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#514, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#515, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#516, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#517, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#518, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#519, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#520, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#521, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#522]\n\n(11) Filter\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(12) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#513, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#514, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#515, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#516, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#517, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#518, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#519, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#520, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#521, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#522]\n\n(13) AdaptiveSparkPlan\nOutput [10]: [toprettystring(Date)#513, toprettystring(ClosingPrice)#514, toprettystring(Change)#515, toprettystring(Trading Volume(shr))#516, toprettystring(Trading Value(KHR))#517, toprettystring(Opening)#518, toprettystring(High)#519, toprettystring(Low)#520, toprettystring(MarketCap.(Mil.KHR))#521, toprettystring(Full Market Cap. (Mil.KHR))#522]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=21, orderBy=[Date#267 ASC NULLS FIRST], output=[toprettystring(Date)#513,toprettystring(ClosingPrice)#514,toprettystring(Change)#515,toprettystring(Trading Volume(shr))#516,toprettystring(Trading Value(KHR))#517,toprettystring(Opening)#518,toprettystring(High)#519,toprettystring(Low)#520,toprettystring(MarketCap.(Mil.KHR))#521,toprettystring(Full Market Cap. (Mil.KHR))#522])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":529,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":523,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":530,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":524,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":521,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":518,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":527,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":520,"metricType":"sum"},{"name":"records read","accumulatorId":517,"metricType":"sum"},{"name":"local bytes read","accumulatorId":515,"metricType":"size"},{"name":"fetch wait time","accumulatorId":516,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":513,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":519,"metricType":"sum"},{"name":"local blocks read","accumulatorId":512,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":522,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":511,"metricType":"sum"},{"name":"data size","accumulatorId":509,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":525,"metricType":"size"},{"name":"number of partitions","accumulatorId":510,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":526,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":514,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":528,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":506,"metricType":"timing"},{"name":"peak memory","accumulatorId":507,"metricType":"size"},{"name":"spill size","accumulatorId":508,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":505,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":555,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":553,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":547,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":554,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":548,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":545,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":542,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":551,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":544,"metricType":"sum"},{"name":"records read","accumulatorId":541,"metricType":"sum"},{"name":"local bytes read","accumulatorId":539,"metricType":"size"},{"name":"fetch wait time","accumulatorId":540,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":537,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":543,"metricType":"sum"},{"name":"local blocks read","accumulatorId":536,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":546,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":535,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":549,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":550,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":538,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":552,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveSQLMetricUpdates","executionId":6,"sqlPlanMetrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"},{"name":"duration","accumulatorId":578,"metricType":"timing"},{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[532,1],[533,0],[534,106039]]}
{"Event":"SparkListenerJobStart","Job ID":9,"Submission Time":1707203226868,"Stage Infos":[{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[9],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"6","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203226870,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"6","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203226883,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203226883,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707203227100,"Failed":false,"Killed":false,"Accumulables":[{"ID":531,"Name":"number of output rows","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":578,"Name":"duration","Update":"167","Value":"167","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":579,"Name":"internal.metrics.executorDeserializeTime","Update":11,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10731291,"Value":10731291,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.executorRunTime","Update":194,"Value":194,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.executorCpuTime","Update":78810414,"Value":78810414,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.resultSize","Update":42123,"Value":42123,"Internal":true,"Count Failed Values":true},{"ID":585,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":610,"Name":"internal.metrics.input.bytesRead","Update":106039,"Value":106039,"Internal":true,"Count Failed Values":true},{"ID":611,"Name":"internal.metrics.input.recordsRead","Update":1219,"Value":1219,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":11,"Executor Deserialize CPU Time":10731291,"Executor Run Time":194,"Executor CPU Time":78810414,"Peak Execution Memory":0,"Result Size":42123,"JVM GC Time":0,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":106039,"Records Read":1219},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203226870,"Completion Time":1707203227101,"Accumulables":[{"ID":531,"Name":"number of output rows","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":578,"Name":"duration","Value":"167","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":579,"Name":"internal.metrics.executorDeserializeTime","Value":11,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.executorDeserializeCpuTime","Value":10731291,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.executorRunTime","Value":194,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.executorCpuTime","Value":78810414,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.resultSize","Value":42123,"Internal":true,"Count Failed Values":true},{"ID":585,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":610,"Name":"internal.metrics.input.bytesRead","Value":106039,"Internal":true,"Count Failed Values":true},{"ID":611,"Name":"internal.metrics.input.recordsRead","Value":1219,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":9,"Completion Time":1707203227101,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[557,2]]}
{"Event":"SparkListenerJobStart","Job ID":10,"Submission Time":1707203227128,"Stage Infos":[{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[10],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"6","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203227130,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"6","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203227163,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203227163,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707203227298,"Failed":false,"Killed":false,"Accumulables":[{"ID":531,"Name":"number of output rows","Update":"1219","Value":"2438","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":556,"Name":"data size","Update":"204288","Value":"204288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":575,"Name":"shuffle bytes written","Update":"51713","Value":"51713","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":576,"Name":"shuffle records written","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":577,"Name":"shuffle write time","Update":"13094164","Value":"13094164","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":578,"Name":"duration","Update":"62","Value":"229","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":614,"Name":"internal.metrics.executorDeserializeTime","Update":32,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.executorDeserializeCpuTime","Update":25795461,"Value":25795461,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.executorRunTime","Update":92,"Value":92,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.executorCpuTime","Update":49915414,"Value":49915414,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.resultSize","Update":1788,"Value":1788,"Internal":true,"Count Failed Values":true},{"ID":642,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":51713,"Value":51713,"Internal":true,"Count Failed Values":true},{"ID":643,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1219,"Value":1219,"Internal":true,"Count Failed Values":true},{"ID":644,"Name":"internal.metrics.shuffle.write.writeTime","Update":13094164,"Value":13094164,"Internal":true,"Count Failed Values":true},{"ID":645,"Name":"internal.metrics.input.bytesRead","Update":106039,"Value":106039,"Internal":true,"Count Failed Values":true},{"ID":646,"Name":"internal.metrics.input.recordsRead","Update":1219,"Value":1219,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":32,"Executor Deserialize CPU Time":25795461,"Executor Run Time":92,"Executor CPU Time":49915414,"Peak Execution Memory":0,"Result Size":1788,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":51713,"Shuffle Write Time":13094164,"Shuffle Records Written":1219},"Input Metrics":{"Bytes Read":106039,"Records Read":1219},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203227130,"Completion Time":1707203227299,"Accumulables":[{"ID":531,"Name":"number of output rows","Value":"2438","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":556,"Name":"data size","Value":"204288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":575,"Name":"shuffle bytes written","Value":"51713","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":576,"Name":"shuffle records written","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":577,"Name":"shuffle write time","Value":"13094164","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":578,"Name":"duration","Value":"229","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":614,"Name":"internal.metrics.executorDeserializeTime","Value":32,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.executorDeserializeCpuTime","Value":25795461,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.executorRunTime","Value":92,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.executorCpuTime","Value":49915414,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.resultSize","Value":1788,"Internal":true,"Count Failed Values":true},{"ID":642,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":51713,"Internal":true,"Count Failed Values":true},{"ID":643,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":1219,"Internal":true,"Count Failed Values":true},{"ID":644,"Name":"internal.metrics.shuffle.write.writeTime","Value":13094164,"Internal":true,"Count Failed Values":true},{"ID":645,"Name":"internal.metrics.input.bytesRead","Value":106039,"Internal":true,"Count Failed Values":true},{"ID":646,"Name":"internal.metrics.input.recordsRead","Value":1219,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":10,"Completion Time":1707203227302,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveSQLMetricUpdates","executionId":6,"sqlPlanMetrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"},{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"},{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[653,1],[655,1],[654,52331]]}
{"Event":"SparkListenerJobStart","Job ID":11,"Submission Time":1707203227378,"Stage Infos":[{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[11],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[12,11],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"6","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[11],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203227381,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"6","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":12,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203227393,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":12,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203227393,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1707203227606,"Failed":false,"Killed":false,"Accumulables":[{"ID":559,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":562,"Name":"local bytes read","Update":"51713","Value":"51713","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":563,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":564,"Name":"records read","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":649,"Name":"duration","Update":"255","Value":"255","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":650,"Name":"sort time","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":651,"Name":"peak memory","Update":"2162672","Value":"2162672","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":652,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":656,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7331081,"Value":7331081,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.executorRunTime","Update":199,"Value":199,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.executorCpuTime","Update":167149291,"Value":167149291,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.resultSize","Update":4427,"Value":4427,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.peakExecutionMemory","Update":2162672,"Value":2162672,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":671,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":51713,"Value":51713,"Internal":true,"Count Failed Values":true},{"ID":672,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":673,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1219,"Value":1219,"Internal":true,"Count Failed Values":true},{"ID":674,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":679,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":680,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":681,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":682,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":683,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":7331081,"Executor Run Time":199,"Executor CPU Time":167149291,"Peak Execution Memory":2162672,"Result Size":4427,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":51713,"Total Records Read":1219,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[11],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203227381,"Completion Time":1707203227607,"Accumulables":[{"ID":559,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":562,"Name":"local bytes read","Value":"51713","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":563,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":564,"Name":"records read","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":649,"Name":"duration","Value":"255","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":650,"Name":"sort time","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":651,"Name":"peak memory","Value":"2162672","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":652,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":656,"Name":"internal.metrics.executorDeserializeTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.executorDeserializeCpuTime","Value":7331081,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.executorRunTime","Value":199,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.executorCpuTime","Value":167149291,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.resultSize","Value":4427,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.peakExecutionMemory","Value":2162672,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":671,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":51713,"Internal":true,"Count Failed Values":true},{"ID":672,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":673,"Name":"internal.metrics.shuffle.read.recordsRead","Value":1219,"Internal":true,"Count Failed Values":true},{"ID":674,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":679,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":680,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":681,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":682,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":683,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":11,"Completion Time":1707203227608,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- == Final Plan ==\n   TakeOrderedAndProject (10)\n   +- * Filter (9)\n      +- TableCacheQueryStage (8), Statistics(sizeInBytes=106.9 KiB, rowCount=1.22E+3)\n         +- InMemoryTableScan (1)\n               +- InMemoryRelation (2)\n                     +- AdaptiveSparkPlan (7)\n                        +- Sort (6)\n                           +- Exchange (5)\n                              +- Project (4)\n                                 +- Scan csv  (3)\n+- == Initial Plan ==\n   TakeOrderedAndProject (12)\n   +- Filter (11)\n      +- InMemoryTableScan (1)\n            +- InMemoryRelation (2)\n                  +- AdaptiveSparkPlan (7)\n                     +- Sort (6)\n                        +- Exchange (5)\n                           +- Project (4)\n                              +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=115]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 0\n\n(9) Filter [codegen id : 1]\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(10) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#513, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#514, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#515, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#516, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#517, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#518, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#519, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#520, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#521, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#522]\n\n(11) Filter\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(12) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#513, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#514, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#515, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#516, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#517, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#518, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#519, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#520, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#521, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#522]\n\n(13) AdaptiveSparkPlan\nOutput [10]: [toprettystring(Date)#513, toprettystring(ClosingPrice)#514, toprettystring(Change)#515, toprettystring(Trading Volume(shr))#516, toprettystring(Trading Value(KHR))#517, toprettystring(Opening)#518, toprettystring(High)#519, toprettystring(Low)#520, toprettystring(MarketCap.(Mil.KHR))#521, toprettystring(Full Market Cap. (Mil.KHR))#522]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=21, orderBy=[Date#267 ASC NULLS FIRST], output=[toprettystring(Date)#513,toprettystring(ClosingPrice)#514,toprettystring(Change)#515,toprettystring(Trading Volume(shr))#516,toprettystring(Trading Value(KHR))#517,toprettystring(Opening)#518,toprettystring(High)#519,toprettystring(Low)#520,toprettystring(MarketCap.(Mil.KHR))#521,toprettystring(Full Market Cap. (Mil.KHR))#522])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":505,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":712,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":711,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":709,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":703,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":710,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":704,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":701,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":698,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":707,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":700,"metricType":"sum"},{"name":"records read","accumulatorId":697,"metricType":"sum"},{"name":"local bytes read","accumulatorId":695,"metricType":"size"},{"name":"fetch wait time","accumulatorId":696,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":693,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":699,"metricType":"sum"},{"name":"local blocks read","accumulatorId":692,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":702,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":691,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":705,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":706,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":694,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":708,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":12,"Submission Time":1707203227675,"Stage Infos":[{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"111\",\"name\":\"takeOrdered\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"110\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[13],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[13,14],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"111\",\"name\":\"takeOrdered\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"6","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"111\",\"name\":\"takeOrdered\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"110\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[13],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203227675,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"111\",\"name\":\"takeOrdered\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"6","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203227686,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203227686,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1707203227757,"Failed":false,"Killed":false,"Accumulables":[{"ID":505,"Name":"number of output rows","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":711,"Name":"duration","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":713,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":714,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14317585,"Value":14317585,"Internal":true,"Count Failed Values":true},{"ID":715,"Name":"internal.metrics.executorRunTime","Update":50,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":716,"Name":"internal.metrics.executorCpuTime","Update":41054958,"Value":41054958,"Internal":true,"Count Failed Values":true},{"ID":717,"Name":"internal.metrics.resultSize","Update":5092,"Value":5092,"Internal":true,"Count Failed Values":true},{"ID":744,"Name":"internal.metrics.input.bytesRead","Update":58216,"Value":58216,"Internal":true,"Count Failed Values":true},{"ID":745,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":14317585,"Executor Run Time":50,"Executor CPU Time":41054958,"Peak Execution Memory":0,"Result Size":5092,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":58216,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"111\",\"name\":\"takeOrdered\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"110\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[13],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203227675,"Completion Time":1707203227758,"Accumulables":[{"ID":505,"Name":"number of output rows","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":711,"Name":"duration","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":713,"Name":"internal.metrics.executorDeserializeTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":714,"Name":"internal.metrics.executorDeserializeCpuTime","Value":14317585,"Internal":true,"Count Failed Values":true},{"ID":715,"Name":"internal.metrics.executorRunTime","Value":50,"Internal":true,"Count Failed Values":true},{"ID":716,"Name":"internal.metrics.executorCpuTime","Value":41054958,"Internal":true,"Count Failed Values":true},{"ID":717,"Name":"internal.metrics.resultSize","Value":5092,"Internal":true,"Count Failed Values":true},{"ID":744,"Name":"internal.metrics.input.bytesRead","Value":58216,"Internal":true,"Count Failed Values":true},{"ID":745,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":12,"Completion Time":1707203227758,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1707203227801,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":7,"rootExecutionId":7,"description":"count at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (12)\n+- HashAggregate (11)\n   +- HashAggregate (10)\n      +- Project (9)\n         +- Filter (8)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=169]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) Filter\nInput [1]: [ClosingPrice#196]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(9) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(10) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#917L]\nResults [1]: [count#918L]\n\n(11) HashAggregate\nInput [1]: [count#918L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#764L]\nResults [1]: [count(1)#764L AS count#765L]\n\n(12) AdaptiveSparkPlan\nOutput [1]: [count#765L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":761,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":760,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":756,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":757,"metricType":"timing"},{"name":"peak memory","accumulatorId":755,"metricType":"size"},{"name":"number of output rows","accumulatorId":754,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":759,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":758,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":750,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":751,"metricType":"timing"},{"name":"peak memory","accumulatorId":749,"metricType":"size"},{"name":"number of output rows","accumulatorId":748,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":753,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":752,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1707203346079,"modifiedConfigs":{"spark.app.name":"StockPrediction"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Current Plan ==\n   HashAggregate (12)\n   +- HashAggregate (11)\n      +- Project (10)\n         +- Filter (9)\n            +- TableCacheQueryStage (8)\n               +- InMemoryTableScan (1)\n                     +- InMemoryRelation (2)\n                           +- AdaptiveSparkPlan (7)\n                              +- Sort (6)\n                                 +- Exchange (5)\n                                    +- Project (4)\n                                       +- Scan csv  (3)\n+- == Initial Plan ==\n   HashAggregate (16)\n   +- HashAggregate (15)\n      +- Project (14)\n         +- Filter (13)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=169]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [1]: [ClosingPrice#196]\nArguments: 0\n\n(9) Filter\nInput [1]: [ClosingPrice#196]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(10) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(11) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#917L]\nResults [1]: [count#918L]\n\n(12) HashAggregate\nInput [1]: [count#918L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#764L]\nResults [1]: [count(1)#764L AS count#765L]\n\n(13) Filter\nInput [1]: [ClosingPrice#196]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(14) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(15) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#917L]\nResults [1]: [count#918L]\n\n(16) HashAggregate\nInput [1]: [count#918L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#764L]\nResults [1]: [count(1)#764L AS count#765L]\n\n(17) AdaptiveSparkPlan\nOutput [1]: [count#765L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":761,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":774,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":770,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":771,"metricType":"timing"},{"name":"peak memory","accumulatorId":769,"metricType":"size"},{"name":"number of output rows","accumulatorId":768,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":773,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":772,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":764,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":765,"metricType":"timing"},{"name":"peak memory","accumulatorId":763,"metricType":"size"},{"name":"number of output rows","accumulatorId":762,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":767,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":766,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Final Plan ==\n   * HashAggregate (12)\n   +- * HashAggregate (11)\n      +- * Project (10)\n         +- * Filter (9)\n            +- TableCacheQueryStage (8), Statistics(sizeInBytes=106.9 KiB, rowCount=1.22E+3)\n               +- InMemoryTableScan (1)\n                     +- InMemoryRelation (2)\n                           +- AdaptiveSparkPlan (7)\n                              +- Sort (6)\n                                 +- Exchange (5)\n                                    +- Project (4)\n                                       +- Scan csv  (3)\n+- == Initial Plan ==\n   HashAggregate (16)\n   +- HashAggregate (15)\n      +- Project (14)\n         +- Filter (13)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=169]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [1]: [ClosingPrice#196]\nArguments: 0\n\n(9) Filter [codegen id : 1]\nInput [1]: [ClosingPrice#196]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(10) Project [codegen id : 1]\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(11) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#917L]\nResults [1]: [count#918L]\n\n(12) HashAggregate [codegen id : 1]\nInput [1]: [count#918L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#764L]\nResults [1]: [count(1)#764L AS count#765L]\n\n(13) Filter\nInput [1]: [ClosingPrice#196]\nCondition : (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))\n\n(14) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(15) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#917L]\nResults [1]: [count#918L]\n\n(16) HashAggregate\nInput [1]: [count#918L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#764L]\nResults [1]: [count(1)#764L AS count#765L]\n\n(17) AdaptiveSparkPlan\nOutput [1]: [count#765L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":761,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":788,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":784,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":785,"metricType":"timing"},{"name":"peak memory","accumulatorId":783,"metricType":"size"},{"name":"number of output rows","accumulatorId":782,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":787,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":786,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":778,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":779,"metricType":"timing"},{"name":"peak memory","accumulatorId":777,"metricType":"size"},{"name":"number of output rows","accumulatorId":776,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":781,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":780,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":775,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":13,"Submission Time":1707203346173,"Stage Infos":[{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":63,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"132\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[62],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":61,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":62,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[61],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[15,16],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"133\",\"name\":\"collect\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"7","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"7","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":63,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"132\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[62],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":61,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":62,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[61],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203346175,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"133\",\"name\":\"collect\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"7","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"7","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203346190,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203346190,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1707203346235,"Failed":false,"Killed":false,"Accumulables":[{"ID":761,"Name":"number of output rows","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":775,"Name":"duration","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":776,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":779,"Name":"time in aggregation build","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"time in aggregation build","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":789,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":790,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16292833,"Value":16292833,"Internal":true,"Count Failed Values":true},{"ID":791,"Name":"internal.metrics.executorRunTime","Update":24,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":792,"Name":"internal.metrics.executorCpuTime","Update":22632584,"Value":22632584,"Internal":true,"Count Failed Values":true},{"ID":793,"Name":"internal.metrics.resultSize","Update":4385,"Value":4385,"Internal":true,"Count Failed Values":true},{"ID":820,"Name":"internal.metrics.input.bytesRead","Update":58216,"Value":58216,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":16292833,"Executor Run Time":24,"Executor CPU Time":22632584,"Peak Execution Memory":0,"Result Size":4385,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":58216,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":63,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"132\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[62],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":61,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":62,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[61],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203346175,"Completion Time":1707203346237,"Accumulables":[{"ID":761,"Name":"number of output rows","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":775,"Name":"duration","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":776,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":779,"Name":"time in aggregation build","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"time in aggregation build","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":789,"Name":"internal.metrics.executorDeserializeTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":790,"Name":"internal.metrics.executorDeserializeCpuTime","Value":16292833,"Internal":true,"Count Failed Values":true},{"ID":791,"Name":"internal.metrics.executorRunTime","Value":24,"Internal":true,"Count Failed Values":true},{"ID":792,"Name":"internal.metrics.executorCpuTime","Value":22632584,"Internal":true,"Count Failed Values":true},{"ID":793,"Name":"internal.metrics.resultSize","Value":4385,"Internal":true,"Count Failed Values":true},{"ID":820,"Name":"internal.metrics.input.bytesRead","Value":58216,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":13,"Completion Time":1707203346237,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":7,"time":1707203346241,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":8,"rootExecutionId":8,"description":"count at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (12)\n+- HashAggregate (11)\n   +- HashAggregate (10)\n      +- Project (9)\n         +- Filter (8)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=204]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) Filter\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(9) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(10) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1132L]\nResults [1]: [count#1133L]\n\n(11) HashAggregate\nInput [1]: [count#1133L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#979L]\nResults [1]: [count(1)#979L AS count#980L]\n\n(12) AdaptiveSparkPlan\nOutput [1]: [count#980L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":837,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":836,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":832,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":833,"metricType":"timing"},{"name":"peak memory","accumulatorId":831,"metricType":"size"},{"name":"number of output rows","accumulatorId":830,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":835,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":834,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":826,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":827,"metricType":"timing"},{"name":"peak memory","accumulatorId":825,"metricType":"size"},{"name":"number of output rows","accumulatorId":824,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":829,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":828,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1707203346282,"modifiedConfigs":{"spark.app.name":"StockPrediction"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":8,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Current Plan ==\n   HashAggregate (12)\n   +- HashAggregate (11)\n      +- Project (10)\n         +- Filter (9)\n            +- TableCacheQueryStage (8)\n               +- InMemoryTableScan (1)\n                     +- InMemoryRelation (2)\n                           +- AdaptiveSparkPlan (7)\n                              +- Sort (6)\n                                 +- Exchange (5)\n                                    +- Project (4)\n                                       +- Scan csv  (3)\n+- == Initial Plan ==\n   HashAggregate (16)\n   +- HashAggregate (15)\n      +- Project (14)\n         +- Filter (13)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=204]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [1]: [ClosingPrice#196]\nArguments: 0\n\n(9) Filter\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(10) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(11) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1132L]\nResults [1]: [count#1133L]\n\n(12) HashAggregate\nInput [1]: [count#1133L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#979L]\nResults [1]: [count(1)#979L AS count#980L]\n\n(13) Filter\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(14) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(15) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1132L]\nResults [1]: [count#1133L]\n\n(16) HashAggregate\nInput [1]: [count#1133L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#979L]\nResults [1]: [count(1)#979L AS count#980L]\n\n(17) AdaptiveSparkPlan\nOutput [1]: [count#980L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":837,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":850,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":846,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":847,"metricType":"timing"},{"name":"peak memory","accumulatorId":845,"metricType":"size"},{"name":"number of output rows","accumulatorId":844,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":849,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":848,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":840,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":841,"metricType":"timing"},{"name":"peak memory","accumulatorId":839,"metricType":"size"},{"name":"number of output rows","accumulatorId":838,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":843,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":842,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":8,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Final Plan ==\n   * HashAggregate (12)\n   +- * HashAggregate (11)\n      +- * Project (10)\n         +- * Filter (9)\n            +- TableCacheQueryStage (8), Statistics(sizeInBytes=106.9 KiB, rowCount=1.22E+3)\n               +- InMemoryTableScan (1)\n                     +- InMemoryRelation (2)\n                           +- AdaptiveSparkPlan (7)\n                              +- Sort (6)\n                                 +- Exchange (5)\n                                    +- Project (4)\n                                       +- Scan csv  (3)\n+- == Initial Plan ==\n   HashAggregate (16)\n   +- HashAggregate (15)\n      +- Project (14)\n         +- Filter (13)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=204]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [1]: [ClosingPrice#196]\nArguments: 0\n\n(9) Filter [codegen id : 1]\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(10) Project [codegen id : 1]\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(11) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1132L]\nResults [1]: [count#1133L]\n\n(12) HashAggregate [codegen id : 1]\nInput [1]: [count#1133L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#979L]\nResults [1]: [count(1)#979L AS count#980L]\n\n(13) Filter\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(14) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(15) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1132L]\nResults [1]: [count#1133L]\n\n(16) HashAggregate\nInput [1]: [count#1133L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#979L]\nResults [1]: [count(1)#979L AS count#980L]\n\n(17) AdaptiveSparkPlan\nOutput [1]: [count#980L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":837,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":864,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":860,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":861,"metricType":"timing"},{"name":"peak memory","accumulatorId":859,"metricType":"size"},{"name":"number of output rows","accumulatorId":858,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":863,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":862,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":854,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":855,"metricType":"timing"},{"name":"peak memory","accumulatorId":853,"metricType":"size"},{"name":"number of output rows","accumulatorId":852,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":857,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":856,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":851,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":14,"Submission Time":1707203346318,"Stage Infos":[{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":18,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":68,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"148\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[67],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":65,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[64],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":64,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":67,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"140\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[66],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":66,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[65],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[17],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[17,18],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"149\",\"name\":\"collect\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"8","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"8","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":18,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":68,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"148\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[67],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":65,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[64],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":64,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":67,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"140\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[66],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":66,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[65],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[17],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203346319,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"149\",\"name\":\"collect\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"8","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"8","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":18,"Stage Attempt ID":0,"Task Info":{"Task ID":14,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203346340,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":18,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":14,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203346340,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1707203346381,"Failed":false,"Killed":false,"Accumulables":[{"ID":837,"Name":"number of output rows","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":851,"Name":"duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":852,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":855,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":858,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":861,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":865,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":866,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3076541,"Value":3076541,"Internal":true,"Count Failed Values":true},{"ID":867,"Name":"internal.metrics.executorRunTime","Update":14,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":868,"Name":"internal.metrics.executorCpuTime","Update":14650584,"Value":14650584,"Internal":true,"Count Failed Values":true},{"ID":869,"Name":"internal.metrics.resultSize","Update":4385,"Value":4385,"Internal":true,"Count Failed Values":true},{"ID":896,"Name":"internal.metrics.input.bytesRead","Update":58216,"Value":58216,"Internal":true,"Count Failed Values":true},{"ID":897,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3076541,"Executor Run Time":14,"Executor CPU Time":14650584,"Peak Execution Memory":0,"Result Size":4385,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":58216,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":18,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":68,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"148\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[67],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":65,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[64],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":64,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":67,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"140\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[66],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":66,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[65],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[17],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203346319,"Completion Time":1707203346383,"Accumulables":[{"ID":837,"Name":"number of output rows","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":851,"Name":"duration","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":852,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":855,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":858,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":861,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":865,"Name":"internal.metrics.executorDeserializeTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":866,"Name":"internal.metrics.executorDeserializeCpuTime","Value":3076541,"Internal":true,"Count Failed Values":true},{"ID":867,"Name":"internal.metrics.executorRunTime","Value":14,"Internal":true,"Count Failed Values":true},{"ID":868,"Name":"internal.metrics.executorCpuTime","Value":14650584,"Internal":true,"Count Failed Values":true},{"ID":869,"Name":"internal.metrics.resultSize","Value":4385,"Internal":true,"Count Failed Values":true},{"ID":896,"Name":"internal.metrics.input.bytesRead","Value":58216,"Internal":true,"Count Failed Values":true},{"ID":897,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":14,"Completion Time":1707203346383,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":8,"time":1707203346384,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":9,"rootExecutionId":9,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- TakeOrderedAndProject (9)\n   +- Filter (8)\n      +- InMemoryTableScan (1)\n            +- InMemoryRelation (2)\n                  +- AdaptiveSparkPlan (7)\n                     +- Sort (6)\n                        +- Exchange (5)\n                           +- Project (4)\n                              +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=233]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) Filter\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(9) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#1194, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#1195, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#1196, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#1197, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#1198, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#1199, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#1200, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#1201, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#1202, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#1203]\n\n(10) AdaptiveSparkPlan\nOutput [10]: [toprettystring(Date)#1194, toprettystring(ClosingPrice)#1195, toprettystring(Change)#1196, toprettystring(Trading Volume(shr))#1197, toprettystring(Trading Value(KHR))#1198, toprettystring(Opening)#1199, toprettystring(High)#1200, toprettystring(Low)#1201, toprettystring(MarketCap.(Mil.KHR))#1202, toprettystring(Full Market Cap. (Mil.KHR))#1203]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=21, orderBy=[Date#267 ASC NULLS FIRST], output=[toprettystring(Date)#1194,toprettystring(ClosingPrice)#1195,toprettystring(Change)#1196,toprettystring(Trading Volume(shr))#1197,toprettystring(Trading Value(KHR))#1198,toprettystring(Opening)#1199,toprettystring(High)#1200,toprettystring(Low)#1201,toprettystring(MarketCap.(Mil.KHR))#1202,toprettystring(Full Market Cap. (Mil.KHR))#1203])","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":921,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":920,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":918,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":912,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":919,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":913,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":910,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":907,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":916,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":909,"metricType":"sum"},{"name":"records read","accumulatorId":906,"metricType":"sum"},{"name":"local bytes read","accumulatorId":904,"metricType":"size"},{"name":"fetch wait time","accumulatorId":905,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":902,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":908,"metricType":"sum"},{"name":"local blocks read","accumulatorId":901,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":911,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":900,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":914,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":915,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":903,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":917,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1707203346421,"modifiedConfigs":{"spark.app.name":"StockPrediction"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":9,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- == Current Plan ==\n   TakeOrderedAndProject (10)\n   +- Filter (9)\n      +- TableCacheQueryStage (8)\n         +- InMemoryTableScan (1)\n               +- InMemoryRelation (2)\n                     +- AdaptiveSparkPlan (7)\n                        +- Sort (6)\n                           +- Exchange (5)\n                              +- Project (4)\n                                 +- Scan csv  (3)\n+- == Initial Plan ==\n   TakeOrderedAndProject (12)\n   +- Filter (11)\n      +- InMemoryTableScan (1)\n            +- InMemoryRelation (2)\n                  +- AdaptiveSparkPlan (7)\n                     +- Sort (6)\n                        +- Exchange (5)\n                           +- Project (4)\n                              +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=233]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 0\n\n(9) Filter\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(10) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#1194, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#1195, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#1196, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#1197, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#1198, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#1199, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#1200, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#1201, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#1202, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#1203]\n\n(11) Filter\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(12) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#1194, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#1195, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#1196, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#1197, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#1198, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#1199, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#1200, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#1201, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#1202, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#1203]\n\n(13) AdaptiveSparkPlan\nOutput [10]: [toprettystring(Date)#1194, toprettystring(ClosingPrice)#1195, toprettystring(Change)#1196, toprettystring(Trading Volume(shr))#1197, toprettystring(Trading Value(KHR))#1198, toprettystring(Opening)#1199, toprettystring(High)#1200, toprettystring(Low)#1201, toprettystring(MarketCap.(Mil.KHR))#1202, toprettystring(Full Market Cap. (Mil.KHR))#1203]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=21, orderBy=[Date#267 ASC NULLS FIRST], output=[toprettystring(Date)#1194,toprettystring(ClosingPrice)#1195,toprettystring(Change)#1196,toprettystring(Trading Volume(shr))#1197,toprettystring(Trading Value(KHR))#1198,toprettystring(Opening)#1199,toprettystring(High)#1200,toprettystring(Low)#1201,toprettystring(MarketCap.(Mil.KHR))#1202,toprettystring(Full Market Cap. (Mil.KHR))#1203])","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":921,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":942,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":940,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":934,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":941,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":935,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":932,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":929,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":938,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":931,"metricType":"sum"},{"name":"records read","accumulatorId":928,"metricType":"sum"},{"name":"local bytes read","accumulatorId":926,"metricType":"size"},{"name":"fetch wait time","accumulatorId":927,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":924,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":930,"metricType":"sum"},{"name":"local blocks read","accumulatorId":923,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":933,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":922,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":936,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":937,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":925,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":939,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":9,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- == Final Plan ==\n   TakeOrderedAndProject (10)\n   +- * Filter (9)\n      +- TableCacheQueryStage (8), Statistics(sizeInBytes=106.9 KiB, rowCount=1.22E+3)\n         +- InMemoryTableScan (1)\n               +- InMemoryRelation (2)\n                     +- AdaptiveSparkPlan (7)\n                        +- Sort (6)\n                           +- Exchange (5)\n                              +- Project (4)\n                                 +- Scan csv  (3)\n+- == Initial Plan ==\n   TakeOrderedAndProject (12)\n   +- Filter (11)\n      +- InMemoryTableScan (1)\n            +- InMemoryRelation (2)\n                  +- AdaptiveSparkPlan (7)\n                     +- Sort (6)\n                        +- Exchange (5)\n                           +- Project (4)\n                              +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=233]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 0\n\n(9) Filter [codegen id : 1]\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(10) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#1194, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#1195, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#1196, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#1197, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#1198, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#1199, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#1200, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#1201, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#1202, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#1203]\n\n(11) Filter\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(12) TakeOrderedAndProject\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: 21, [Date#267 ASC NULLS FIRST], [toprettystring(Date#267, Some(Etc/UTC)) AS toprettystring(Date)#1194, toprettystring(cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(ClosingPrice)#1195, toprettystring(Change#197, Some(Etc/UTC)) AS toprettystring(Change)#1196, toprettystring(cast(cast(cast(cast(Trading Volume(shr)#198 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#1197, toprettystring(cast(cast(cast(cast(Trading Value(KHR)#199 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#1198, toprettystring(cast(cast(cast(cast(Opening#200 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Opening)#1199, toprettystring(cast(cast(cast(cast(High#201 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(High)#1200, toprettystring(cast(cast(cast(cast(Low#202 as float) as int) as float) as int), Some(Etc/UTC)) AS toprettystring(Low)#1201, toprettystring(cast(cast(MarketCap.(Mil.KHR)#203 as float) as int), Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#1202, toprettystring(cast(cast(Full Market Cap. (Mil.KHR)#204 as float) as int), Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#1203]\n\n(13) AdaptiveSparkPlan\nOutput [10]: [toprettystring(Date)#1194, toprettystring(ClosingPrice)#1195, toprettystring(Change)#1196, toprettystring(Trading Volume(shr))#1197, toprettystring(Trading Value(KHR))#1198, toprettystring(Opening)#1199, toprettystring(High)#1200, toprettystring(Low)#1201, toprettystring(MarketCap.(Mil.KHR))#1202, toprettystring(Full Market Cap. (Mil.KHR))#1203]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=21, orderBy=[Date#267 ASC NULLS FIRST], output=[toprettystring(Date)#1194,toprettystring(ClosingPrice)#1195,toprettystring(Change)#1196,toprettystring(Trading Volume(shr))#1197,toprettystring(Trading Value(KHR))#1198,toprettystring(Opening)#1199,toprettystring(High)#1200,toprettystring(Low)#1201,toprettystring(MarketCap.(Mil.KHR))#1202,toprettystring(Full Market Cap. (Mil.KHR))#1203])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":921,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":964,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":963,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":961,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":955,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":962,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":956,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":953,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":950,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":959,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":952,"metricType":"sum"},{"name":"records read","accumulatorId":949,"metricType":"sum"},{"name":"local bytes read","accumulatorId":947,"metricType":"size"},{"name":"fetch wait time","accumulatorId":948,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":945,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":951,"metricType":"sum"},{"name":"local blocks read","accumulatorId":944,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":954,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":943,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":957,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":958,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":946,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":960,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":15,"Submission Time":1707203346471,"Stage Infos":[{"Stage ID":19,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":74,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"162\",\"name\":\"takeOrdered\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[73],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":69,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":72,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"156\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[71],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":73,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"161\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[72],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":71,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[70],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":70,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[69],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[19],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[19,20],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"162\",\"name\":\"takeOrdered\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"9","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"9","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":74,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"162\",\"name\":\"takeOrdered\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[73],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":69,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":72,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"156\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[71],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":73,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"161\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[72],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":71,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[70],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":70,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[69],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[19],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203346472,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"162\",\"name\":\"takeOrdered\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"9","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"9","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":15,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203346477,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":15,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203346477,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1707203346507,"Failed":false,"Killed":false,"Accumulables":[{"ID":921,"Name":"number of output rows","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":963,"Name":"duration","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":965,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":966,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4839374,"Value":4839374,"Internal":true,"Count Failed Values":true},{"ID":967,"Name":"internal.metrics.executorRunTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.executorCpuTime","Update":16107543,"Value":16107543,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.resultSize","Update":5178,"Value":5178,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.jvmGCTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":996,"Name":"internal.metrics.input.bytesRead","Update":58216,"Value":58216,"Internal":true,"Count Failed Values":true},{"ID":997,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":4839374,"Executor Run Time":16,"Executor CPU Time":16107543,"Peak Execution Memory":0,"Result Size":5178,"JVM GC Time":5,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":58216,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":74,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"162\",\"name\":\"takeOrdered\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[73],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":69,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":72,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"156\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[71],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":73,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"161\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[72],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":71,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[70],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":70,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"InMemoryTableScan\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[69],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[19],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203346472,"Completion Time":1707203346508,"Accumulables":[{"ID":921,"Name":"number of output rows","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":963,"Name":"duration","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":965,"Name":"internal.metrics.executorDeserializeTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":966,"Name":"internal.metrics.executorDeserializeCpuTime","Value":4839374,"Internal":true,"Count Failed Values":true},{"ID":967,"Name":"internal.metrics.executorRunTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.executorCpuTime","Value":16107543,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.resultSize","Value":5178,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.jvmGCTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.resultSerializationTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":996,"Name":"internal.metrics.input.bytesRead","Value":58216,"Internal":true,"Count Failed Values":true},{"ID":997,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":15,"Completion Time":1707203346508,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":9,"time":1707203346515,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":10,"rootExecutionId":10,"description":"count at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (12)\n+- HashAggregate (11)\n   +- HashAggregate (10)\n      +- Project (9)\n         +- Filter (8)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=261]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) Filter\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(9) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(10) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1588L]\nResults [1]: [count#1589L]\n\n(11) HashAggregate\nInput [1]: [count#1589L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1435L]\nResults [1]: [count(1)#1435L AS count#1436L]\n\n(12) AdaptiveSparkPlan\nOutput [1]: [count#1436L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1013,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1012,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1008,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1009,"metricType":"timing"},{"name":"peak memory","accumulatorId":1007,"metricType":"size"},{"name":"number of output rows","accumulatorId":1006,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1011,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1010,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1002,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1003,"metricType":"timing"},{"name":"peak memory","accumulatorId":1001,"metricType":"size"},{"name":"number of output rows","accumulatorId":1000,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1005,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1004,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1707203418535,"modifiedConfigs":{"spark.app.name":"StockPrediction"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":10,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Current Plan ==\n   HashAggregate (12)\n   +- HashAggregate (11)\n      +- Project (10)\n         +- Filter (9)\n            +- TableCacheQueryStage (8)\n               +- InMemoryTableScan (1)\n                     +- InMemoryRelation (2)\n                           +- AdaptiveSparkPlan (7)\n                              +- Sort (6)\n                                 +- Exchange (5)\n                                    +- Project (4)\n                                       +- Scan csv  (3)\n+- == Initial Plan ==\n   HashAggregate (16)\n   +- HashAggregate (15)\n      +- Project (14)\n         +- Filter (13)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=261]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [1]: [ClosingPrice#196]\nArguments: 0\n\n(9) Filter\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(10) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(11) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1588L]\nResults [1]: [count#1589L]\n\n(12) HashAggregate\nInput [1]: [count#1589L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1435L]\nResults [1]: [count(1)#1435L AS count#1436L]\n\n(13) Filter\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(14) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(15) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1588L]\nResults [1]: [count#1589L]\n\n(16) HashAggregate\nInput [1]: [count#1589L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1435L]\nResults [1]: [count(1)#1435L AS count#1436L]\n\n(17) AdaptiveSparkPlan\nOutput [1]: [count#1436L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1013,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1026,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1022,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1023,"metricType":"timing"},{"name":"peak memory","accumulatorId":1021,"metricType":"size"},{"name":"number of output rows","accumulatorId":1020,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1025,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1024,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1016,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1017,"metricType":"timing"},{"name":"peak memory","accumulatorId":1015,"metricType":"size"},{"name":"number of output rows","accumulatorId":1014,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1019,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1018,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":10,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Final Plan ==\n   * HashAggregate (12)\n   +- * HashAggregate (11)\n      +- * Project (10)\n         +- * Filter (9)\n            +- TableCacheQueryStage (8), Statistics(sizeInBytes=106.9 KiB, rowCount=1.22E+3)\n               +- InMemoryTableScan (1)\n                     +- InMemoryRelation (2)\n                           +- AdaptiveSparkPlan (7)\n                              +- Sort (6)\n                                 +- Exchange (5)\n                                    +- Project (4)\n                                       +- Scan csv  (3)\n+- == Initial Plan ==\n   HashAggregate (16)\n   +- HashAggregate (15)\n      +- Project (14)\n         +- Filter (13)\n            +- InMemoryTableScan (1)\n                  +- InMemoryRelation (2)\n                        +- AdaptiveSparkPlan (7)\n                           +- Sort (6)\n                              +- Exchange (5)\n                                 +- Project (4)\n                                    +- Scan csv  (3)\n\n\n(1) InMemoryTableScan\nOutput [1]: [ClosingPrice#196]\nArguments: [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]\n\n(2) InMemoryRelation\nArguments: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@3a53fb9e,StorageLevel(disk, memory, deserialized, 1 replicas),AdaptiveSparkPlan isFinalPlan=true\n+- == Final Plan ==\n   *(2) Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- AQEShuffleRead coalesced\n      +- ShuffleQueryStage 0\n         +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]\n            +- *(1) Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n               +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n+- == Initial Plan ==\n   Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n,None), [Date#267 ASC NULLS FIRST]\n\n(3) Scan csv \nOutput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(4) Project\nOutput [10]: [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nInput [10]: [Date#195, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n\n(5) Exchange\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=261]\n\n(6) Sort\nInput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: [Date#267 ASC NULLS FIRST], true, 0\n\n(7) AdaptiveSparkPlan\nOutput [10]: [Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\nArguments: isFinalPlan=false\n\n(8) TableCacheQueryStage\nOutput [1]: [ClosingPrice#196]\nArguments: 0\n\n(9) Filter [codegen id : 1]\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(10) Project [codegen id : 1]\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(11) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1588L]\nResults [1]: [count#1589L]\n\n(12) HashAggregate [codegen id : 1]\nInput [1]: [count#1589L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1435L]\nResults [1]: [count(1)#1435L AS count#1436L]\n\n(13) Filter\nInput [1]: [ClosingPrice#196]\nCondition : ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))\n\n(14) Project\nOutput: []\nInput [1]: [ClosingPrice#196]\n\n(15) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1588L]\nResults [1]: [count#1589L]\n\n(16) HashAggregate\nInput [1]: [count#1589L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1435L]\nResults [1]: [count(1)#1435L AS count#1436L]\n\n(17) AdaptiveSparkPlan\nOutput [1]: [count#1436L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(ClosingPrice#196) AND NOT (cast(ClosingPrice#196 as int) = 0)) AND NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"TableCacheQueryStage","simpleString":"TableCacheQueryStage 0","children":[{"nodeName":"InMemoryTableScan","simpleString":"InMemoryTableScan [ClosingPrice#196], [isnotnull(ClosingPrice#196), NOT (cast(ClosingPrice#196 as int) = 0), NOT (cast(cast(cast(cast(ClosingPrice#196 as float) as int) as float) as int) = 0)]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Sort","simpleString":"Sort [Date#267 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=128]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of files read","accumulatorId":532,"metricType":"sum"},{"name":"metadata time","accumulatorId":533,"metricType":"timing"},{"name":"size of files read","accumulatorId":534,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":578,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":576,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":570,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":577,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":571,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":568,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":565,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":574,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":567,"metricType":"sum"},{"name":"records read","accumulatorId":564,"metricType":"sum"},{"name":"local bytes read","accumulatorId":562,"metricType":"size"},{"name":"fetch wait time","accumulatorId":563,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":560,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":566,"metricType":"sum"},{"name":"local blocks read","accumulatorId":559,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":569,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":558,"metricType":"sum"},{"name":"data size","accumulatorId":556,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":572,"metricType":"size"},{"name":"number of partitions","accumulatorId":557,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":561,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":653,"metricType":"sum"},{"name":"partition data size","accumulatorId":654,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":655,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":650,"metricType":"timing"},{"name":"peak memory","accumulatorId":651,"metricType":"size"},{"name":"spill size","accumulatorId":652,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":649,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1013,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1040,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1036,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1037,"metricType":"timing"},{"name":"peak memory","accumulatorId":1035,"metricType":"size"},{"name":"number of output rows","accumulatorId":1034,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1039,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1038,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1030,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1031,"metricType":"timing"},{"name":"peak memory","accumulatorId":1029,"metricType":"size"},{"name":"number of output rows","accumulatorId":1028,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1033,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1032,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1027,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":16,"Submission Time":1707203418596,"Stage Infos":[{"Stage ID":21,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":79,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"178\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[78],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":75,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":78,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"170\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[77],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":77,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[76],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":76,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[75],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[21,22],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"179\",\"name\":\"collect\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"10","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"10","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":79,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"178\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[78],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":75,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":78,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"170\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[77],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":77,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[76],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":76,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[75],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203418597,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"179\",\"name\":\"collect\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"StockPrediction","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"10","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"10","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":22,"Stage Attempt ID":0,"Task Info":{"Task ID":16,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203418620,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":22,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":16,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203418620,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1707203418637,"Failed":false,"Killed":false,"Accumulables":[{"ID":1013,"Name":"number of output rows","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1027,"Name":"duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1028,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1031,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1034,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1037,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":1042,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7669751,"Value":7669751,"Internal":true,"Count Failed Values":true},{"ID":1043,"Name":"internal.metrics.executorRunTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":1044,"Name":"internal.metrics.executorCpuTime","Update":3997583,"Value":3997583,"Internal":true,"Count Failed Values":true},{"ID":1045,"Name":"internal.metrics.resultSize","Update":4385,"Value":4385,"Internal":true,"Count Failed Values":true},{"ID":1072,"Name":"internal.metrics.input.bytesRead","Update":58216,"Value":58216,"Internal":true,"Count Failed Values":true},{"ID":1073,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":7669751,"Executor Run Time":5,"Executor CPU Time":3997583,"Peak Execution Memory":0,"Result Size":4385,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":58216,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":79,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"178\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[78],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"AdaptiveSparkPlan isFinalPlan=false\n+- Sort [Date#267 ASC NULLS FIRST], true, 0\n   +- Exchange rangepartitioning(Date#267 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [plan_id=103]\n      +- Project [cast(Date#195 as timestamp) AS Date#267, ClosingPrice#196, Change#197, Trading Volume(shr)#198, Trading Value(KHR)#199, Opening#200, High#201, Low#202, MarketCap.(Mil.KHR)#203, Full Market Cap. (Mil.KHR)#204]\n         +- FileScan csv [Date#195,ClosingPrice#196,Change#197,Trading Volume(shr)#198,Trading Value(KHR)#199,Opening#200,High#201,Low#202,MarketCap.(Mil.KHR)#203,Full Market Cap. (Mil.KHR)#204] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...\n","Scope":"{\"id\":\"104\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[51],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":true,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":75,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":78,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"170\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[77],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"102\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":77,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[76],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":76,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"177\",\"name\":\"InMemoryTableScan\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[75],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203418597,"Completion Time":1707203418638,"Accumulables":[{"ID":1013,"Name":"number of output rows","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1027,"Name":"duration","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1028,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1031,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1034,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1037,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"internal.metrics.executorDeserializeTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":1042,"Name":"internal.metrics.executorDeserializeCpuTime","Value":7669751,"Internal":true,"Count Failed Values":true},{"ID":1043,"Name":"internal.metrics.executorRunTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":1044,"Name":"internal.metrics.executorCpuTime","Value":3997583,"Internal":true,"Count Failed Values":true},{"ID":1045,"Name":"internal.metrics.resultSize","Value":4385,"Internal":true,"Count Failed Values":true},{"ID":1072,"Name":"internal.metrics.input.bytesRead","Value":58216,"Internal":true,"Count Failed Values":true},{"ID":1073,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":16,"Completion Time":1707203418638,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":10,"time":1707203418639,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":11,"rootExecutionId":11,"description":"csv at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Filter (2)\n   +- Scan text  (1)\n\n\n(1) Scan text \nOutput [1]: [value#1640]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv]\nReadSchema: struct<value:string>\n\n(2) Filter [codegen id : 1]\nInput [1]: [value#1640]\nCondition : (length(trim(value#1640, None)) > 0)\n\n(3) CollectLimit\nInput [1]: [value#1640]\nArguments: 1\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter (length(trim(value#1640, None)) > 0)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan text ","simpleString":"FileScan text [value#1640] Batched: false, DataFilters: [(length(trim(value#1640, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice/pwsa_price.csv]","ReadSchema":"struct<value:string>","Format":"Text","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[(length(trim(value#1640, None)) > 0)]"},"metrics":[{"name":"number of output rows","accumulatorId":1098,"metricType":"sum"},{"name":"number of files read","accumulatorId":1099,"metricType":"sum"},{"name":"metadata time","accumulatorId":1100,"metricType":"timing"},{"name":"size of files read","accumulatorId":1101,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1097,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1096,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1094,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1088,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1095,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1089,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1086,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1083,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1092,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1085,"metricType":"sum"},{"name":"records read","accumulatorId":1082,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1080,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1081,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1078,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1084,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1077,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1087,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1076,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1090,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1091,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1079,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1093,"metricType":"size"}]},"time":1707203427573,"modifiedConfigs":{},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":11,"accumUpdates":[[1099,1],[1100,0],[1101,106039]]}
{"Event":"SparkListenerJobStart","Job ID":17,"Submission Time":1707203427627,"Stage Infos":[{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":83,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"190\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[82],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":81,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"189\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[80],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":80,"Name":"FileScanRDD","Scope":"{\"id\":\"189\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":82,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"186\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[81],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[23],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"11","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"11","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":83,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"190\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[82],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":81,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"189\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[80],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":80,"Name":"FileScanRDD","Scope":"{\"id\":\"189\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":82,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"186\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[81],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203427628,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"11","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"11","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":17,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203427635,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":17,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203427635,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707203427716,"Failed":false,"Killed":false,"Accumulables":[{"ID":1097,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1098,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1102,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":1103,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6161793,"Value":6161793,"Internal":true,"Count Failed Values":true},{"ID":1104,"Name":"internal.metrics.executorRunTime","Update":70,"Value":70,"Internal":true,"Count Failed Values":true},{"ID":1105,"Name":"internal.metrics.executorCpuTime","Update":9841333,"Value":9841333,"Internal":true,"Count Failed Values":true},{"ID":1106,"Name":"internal.metrics.resultSize","Update":1679,"Value":1679,"Internal":true,"Count Failed Values":true},{"ID":1133,"Name":"internal.metrics.input.bytesRead","Update":65536,"Value":65536,"Internal":true,"Count Failed Values":true},{"ID":1134,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":6161793,"Executor Run Time":70,"Executor CPU Time":9841333,"Peak Execution Memory":0,"Result Size":1679,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":65536,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":83,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"190\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[82],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":81,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"189\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[80],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":80,"Name":"FileScanRDD","Scope":"{\"id\":\"189\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":82,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"186\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[81],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203427628,"Completion Time":1707203427716,"Accumulables":[{"ID":1097,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1098,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1102,"Name":"internal.metrics.executorDeserializeTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":1103,"Name":"internal.metrics.executorDeserializeCpuTime","Value":6161793,"Internal":true,"Count Failed Values":true},{"ID":1104,"Name":"internal.metrics.executorRunTime","Value":70,"Internal":true,"Count Failed Values":true},{"ID":1105,"Name":"internal.metrics.executorCpuTime","Value":9841333,"Internal":true,"Count Failed Values":true},{"ID":1106,"Name":"internal.metrics.resultSize","Value":1679,"Internal":true,"Count Failed Values":true},{"ID":1133,"Name":"internal.metrics.input.bytesRead","Value":65536,"Internal":true,"Count Failed Values":true},{"ID":1134,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":17,"Completion Time":1707203427717,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":11,"time":1707203427718,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":18,"Submission Time":1707203427751,"Stage Infos":[{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":89,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"198\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[88],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":85,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"196\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[84],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":84,"Name":"FileScanRDD","Scope":"{\"id\":\"196\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":88,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"197\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[87],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":87,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[86],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":86,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"195\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[85],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[24],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"199\",\"name\":\"aggregate\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":89,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"198\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[88],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":85,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"196\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[84],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":84,"Name":"FileScanRDD","Scope":"{\"id\":\"196\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":88,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"197\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[87],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":87,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[86],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":86,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"195\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[85],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203427751,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"199\",\"name\":\"aggregate\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":18,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203427758,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":18,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203427758,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707203427797,"Failed":false,"Killed":false,"Accumulables":[{"ID":1137,"Name":"number of output rows","Update":"1220","Value":"1220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1141,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":1142,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2213709,"Value":2213709,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.executorRunTime","Update":34,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.executorCpuTime","Update":15585167,"Value":15585167,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.resultSize","Update":1651,"Value":1651,"Internal":true,"Count Failed Values":true},{"ID":1146,"Name":"internal.metrics.jvmGCTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.input.bytesRead","Update":106039,"Value":106039,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.input.recordsRead","Update":1220,"Value":1220,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":2213709,"Executor Run Time":34,"Executor CPU Time":15585167,"Peak Execution Memory":0,"Result Size":1651,"JVM GC Time":6,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":106039,"Records Read":1220},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":89,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"198\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[88],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":85,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"196\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[84],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":84,"Name":"FileScanRDD","Scope":"{\"id\":\"196\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":88,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"197\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[87],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":87,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[86],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":86,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"195\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[85],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203427751,"Completion Time":1707203427798,"Accumulables":[{"ID":1137,"Name":"number of output rows","Value":"1220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1141,"Name":"internal.metrics.executorDeserializeTime","Value":2,"Internal":true,"Count Failed Values":true},{"ID":1142,"Name":"internal.metrics.executorDeserializeCpuTime","Value":2213709,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.executorRunTime","Value":34,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.executorCpuTime","Value":15585167,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.resultSize","Value":1651,"Internal":true,"Count Failed Values":true},{"ID":1146,"Name":"internal.metrics.jvmGCTime","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.input.bytesRead","Value":106039,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.input.recordsRead","Value":1220,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":18,"Completion Time":1707203427798,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":12,"rootExecutionId":12,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Project (2)\n   +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [10]: [Date#1657, ClosingPrice#1658, Change#1659, Trading Volume(shr)#1660, Trading Value(KHR)#1661, Opening#1662, High#1663, Low#1664, MarketCap.(Mil.KHR)#1665, Full Market Cap. (Mil.KHR)#1666]\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>\n\n(2) Project [codegen id : 1]\nOutput [10]: [toprettystring(Date#1657, Some(Etc/UTC)) AS toprettystring(Date)#1687, toprettystring(ClosingPrice#1658, Some(Etc/UTC)) AS toprettystring(ClosingPrice)#1688, toprettystring(Change#1659, Some(Etc/UTC)) AS toprettystring(Change)#1689, toprettystring(Trading Volume(shr)#1660, Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#1690, toprettystring(Trading Value(KHR)#1661, Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#1691, toprettystring(Opening#1662, Some(Etc/UTC)) AS toprettystring(Opening)#1692, toprettystring(High#1663, Some(Etc/UTC)) AS toprettystring(High)#1693, toprettystring(Low#1664, Some(Etc/UTC)) AS toprettystring(Low)#1694, toprettystring(MarketCap.(Mil.KHR)#1665, Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#1695, toprettystring(Full Market Cap. (Mil.KHR)#1666, Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#1696]\nInput [10]: [Date#1657, ClosingPrice#1658, Change#1659, Trading Volume(shr)#1660, Trading Value(KHR)#1661, Opening#1662, High#1663, Low#1664, MarketCap.(Mil.KHR)#1665, Full Market Cap. (Mil.KHR)#1666]\n\n(3) CollectLimit\nInput [10]: [toprettystring(Date)#1687, toprettystring(ClosingPrice)#1688, toprettystring(Change)#1689, toprettystring(Trading Volume(shr))#1690, toprettystring(Trading Value(KHR))#1691, toprettystring(Opening)#1692, toprettystring(High)#1693, toprettystring(Low)#1694, toprettystring(MarketCap.(Mil.KHR))#1695, toprettystring(Full Market Cap. (Mil.KHR))#1696]\nArguments: 6\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 6","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(Date#1657, Some(Etc/UTC)) AS toprettystring(Date)#1687, toprettystring(ClosingPrice#1658, Some(Etc/UTC)) AS toprettystring(ClosingPrice)#1688, toprettystring(Change#1659, Some(Etc/UTC)) AS toprettystring(Change)#1689, toprettystring(Trading Volume(shr)#1660, Some(Etc/UTC)) AS toprettystring(Trading Volume(shr))#1690, toprettystring(Trading Value(KHR)#1661, Some(Etc/UTC)) AS toprettystring(Trading Value(KHR))#1691, toprettystring(Opening#1662, Some(Etc/UTC)) AS toprettystring(Opening)#1692, toprettystring(High#1663, Some(Etc/UTC)) AS toprettystring(High)#1693, toprettystring(Low#1664, Some(Etc/UTC)) AS toprettystring(Low)#1694, toprettystring(MarketCap.(Mil.KHR)#1665, Some(Etc/UTC)) AS toprettystring(MarketCap.(Mil.KHR))#1695, toprettystring(Full Market Cap. (Mil.KHR)#1666, Some(Etc/UTC)) AS toprettystring(Full Market Cap. (Mil.KHR))#1696]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [Date#1657,ClosingPrice#1658,Change#1659,Trading Volume(shr)#1660,Trading Value(KHR)#1661,Opening#1662,High#1663,Low#1664,MarketCap.(Mil.KHR)#1665,Full Market Cap. (Mil.KHR)#1666] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):s...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<Date:string,ClosingPrice:string,Change:int,Trading Volume(shr):string,Trading Value(KHR):string,Opening:string,High:string,Low:string,MarketCap.(Mil.KHR):string,Full Market Cap. (Mil.KHR):string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":1197,"metricType":"sum"},{"name":"number of files read","accumulatorId":1198,"metricType":"sum"},{"name":"metadata time","accumulatorId":1199,"metricType":"timing"},{"name":"size of files read","accumulatorId":1200,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1196,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1194,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1188,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1195,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1189,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1186,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1183,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1192,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1185,"metricType":"sum"},{"name":"records read","accumulatorId":1182,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1180,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1181,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1178,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1184,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1177,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1187,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1176,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1190,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1191,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1179,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1193,"metricType":"size"}]},"time":1707203427824,"modifiedConfigs":{},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":12,"accumUpdates":[[1198,1],[1199,0],[1200,106039]]}
{"Event":"SparkListenerJobStart","Job ID":19,"Submission Time":1707203427845,"Stage Infos":[{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":93,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"210\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[92],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":90,"Name":"FileScanRDD","Scope":"{\"id\":\"209\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":92,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"206\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[91],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":91,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"209\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[90],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[25],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"12","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"12","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":93,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"210\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[92],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":90,"Name":"FileScanRDD","Scope":"{\"id\":\"209\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":92,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"206\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[91],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":91,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"209\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[90],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203427846,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"12","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"12","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":25,"Stage Attempt ID":0,"Task Info":{"Task ID":19,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203427854,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":25,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":19,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203427854,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707203427877,"Failed":false,"Killed":false,"Accumulables":[{"ID":1197,"Name":"number of output rows","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1201,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1817167,"Value":1817167,"Internal":true,"Count Failed Values":true},{"ID":1203,"Name":"internal.metrics.executorRunTime","Update":17,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":1204,"Name":"internal.metrics.executorCpuTime","Update":6890709,"Value":6890709,"Internal":true,"Count Failed Values":true},{"ID":1205,"Name":"internal.metrics.resultSize","Update":1882,"Value":1882,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.input.bytesRead","Update":65536,"Value":65536,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.input.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":1817167,"Executor Run Time":17,"Executor CPU Time":6890709,"Peak Execution Memory":0,"Result Size":1882,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":65536,"Records Read":6},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":93,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"210\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[92],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":90,"Name":"FileScanRDD","Scope":"{\"id\":\"209\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":92,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"206\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[91],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":91,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"209\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[90],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203427846,"Completion Time":1707203427878,"Accumulables":[{"ID":1197,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1201,"Name":"internal.metrics.executorDeserializeTime","Value":2,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.executorDeserializeCpuTime","Value":1817167,"Internal":true,"Count Failed Values":true},{"ID":1203,"Name":"internal.metrics.executorRunTime","Value":17,"Internal":true,"Count Failed Values":true},{"ID":1204,"Name":"internal.metrics.executorCpuTime","Value":6890709,"Internal":true,"Count Failed Values":true},{"ID":1205,"Name":"internal.metrics.resultSize","Value":1882,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.input.bytesRead","Value":65536,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.input.recordsRead","Value":6,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":19,"Completion Time":1707203427878,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":12,"time":1707203427881,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":13,"rootExecutionId":13,"description":"count at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<>\n\n(2) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1742L]\nResults [1]: [count#1743L]\n\n(3) Exchange\nInput [1]: [count#1743L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=322]\n\n(4) HashAggregate\nInput [1]: [count#1743L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1739L]\nResults [1]: [count(1)#1739L AS count#1740L]\n\n(5) AdaptiveSparkPlan\nOutput [1]: [count#1740L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=322]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":1270,"metricType":"sum"},{"name":"number of files read","accumulatorId":1271,"metricType":"sum"},{"name":"metadata time","accumulatorId":1272,"metricType":"timing"},{"name":"size of files read","accumulatorId":1273,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1266,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1267,"metricType":"timing"},{"name":"peak memory","accumulatorId":1265,"metricType":"size"},{"name":"number of output rows","accumulatorId":1264,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1269,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1268,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1262,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1256,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1263,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1257,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1254,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1251,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1260,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1253,"metricType":"sum"},{"name":"records read","accumulatorId":1250,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1248,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1249,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1246,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1252,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1245,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1255,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1244,"metricType":"sum"},{"name":"data size","accumulatorId":1242,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1258,"metricType":"size"},{"name":"number of partitions","accumulatorId":1243,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1259,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1247,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1261,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1238,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1239,"metricType":"timing"},{"name":"peak memory","accumulatorId":1237,"metricType":"size"},{"name":"number of output rows","accumulatorId":1236,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1241,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1240,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1707203430747,"modifiedConfigs":{},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":13,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- == Current Plan ==\n   HashAggregate (5)\n   +- ShuffleQueryStage (4)\n      +- Exchange (3)\n         +- * HashAggregate (2)\n            +- Scan csv  (1)\n+- == Initial Plan ==\n   HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (6)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<>\n\n(2) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1742L]\nResults [1]: [count#1743L]\n\n(3) Exchange\nInput [1]: [count#1743L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=330]\n\n(4) ShuffleQueryStage\nOutput [1]: [count#1743L]\nArguments: 0\n\n(5) HashAggregate\nInput [1]: [count#1743L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1739L]\nResults [1]: [count(1)#1739L AS count#1740L]\n\n(6) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1742L]\nResults [1]: [count#1743L]\n\n(7) Exchange\nInput [1]: [count#1743L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=322]\n\n(8) HashAggregate\nInput [1]: [count#1743L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1739L]\nResults [1]: [count(1)#1739L AS count#1740L]\n\n(9) AdaptiveSparkPlan\nOutput [1]: [count#1740L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=330]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":1270,"metricType":"sum"},{"name":"number of files read","accumulatorId":1271,"metricType":"sum"},{"name":"metadata time","accumulatorId":1272,"metricType":"timing"},{"name":"size of files read","accumulatorId":1273,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1305,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1306,"metricType":"timing"},{"name":"peak memory","accumulatorId":1304,"metricType":"size"},{"name":"number of output rows","accumulatorId":1303,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1308,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1307,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1302,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1300,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1294,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1301,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1295,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1292,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1289,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1298,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1291,"metricType":"sum"},{"name":"records read","accumulatorId":1288,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1286,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1287,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1284,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1290,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1283,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1293,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1282,"metricType":"sum"},{"name":"data size","accumulatorId":1280,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1296,"metricType":"size"},{"name":"number of partitions","accumulatorId":1281,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1297,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1285,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1299,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1276,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1277,"metricType":"timing"},{"name":"peak memory","accumulatorId":1275,"metricType":"size"},{"name":"number of output rows","accumulatorId":1274,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1279,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1278,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":13,"accumUpdates":[[1271,1],[1272,0],[1273,106039]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":13,"accumUpdates":[[1281,1]]}
{"Event":"SparkListenerJobStart","Job ID":20,"Submission Time":1707203430787,"Stage Infos":[{"Stage ID":26,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":97,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"215\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[96],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":96,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"216\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[95],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":95,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"219\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[94],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":94,"Name":"FileScanRDD","Scope":"{\"id\":\"219\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[26],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"215\",\"name\":\"Exchange\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"13","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"13","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":26,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":97,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"215\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[96],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":96,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"216\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[95],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":95,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"219\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[94],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":94,"Name":"FileScanRDD","Scope":"{\"id\":\"219\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203430787,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"215\",\"name\":\"Exchange\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"13","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"13","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":26,"Stage Attempt ID":0,"Task Info":{"Task ID":20,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203430793,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":26,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":20,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203430793,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"ANY","Speculative":false,"Getting Result Time":0,"Finish Time":1707203430861,"Failed":false,"Killed":false,"Accumulables":[{"ID":1270,"Name":"number of output rows","Update":"1219","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1280,"Name":"data size","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1299,"Name":"shuffle bytes written","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1300,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1301,"Name":"shuffle write time","Update":"1385041","Value":"1385041","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1302,"Name":"duration","Update":"51","Value":"51","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1303,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1306,"Name":"time in aggregation build","Update":"50","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1309,"Name":"internal.metrics.executorDeserializeTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1310,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1823791,"Value":1823791,"Internal":true,"Count Failed Values":true},{"ID":1311,"Name":"internal.metrics.executorRunTime","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":1312,"Name":"internal.metrics.executorCpuTime","Update":25676790,"Value":25676790,"Internal":true,"Count Failed Values":true},{"ID":1313,"Name":"internal.metrics.resultSize","Update":2014,"Value":2014,"Internal":true,"Count Failed Values":true},{"ID":1314,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1315,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1337,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":1338,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1339,"Name":"internal.metrics.shuffle.write.writeTime","Update":1385041,"Value":1385041,"Internal":true,"Count Failed Values":true},{"ID":1340,"Name":"internal.metrics.input.bytesRead","Update":106039,"Value":106039,"Internal":true,"Count Failed Values":true},{"ID":1341,"Name":"internal.metrics.input.recordsRead","Update":1219,"Value":1219,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1,"Executor Deserialize CPU Time":1823791,"Executor Run Time":59,"Executor CPU Time":25676790,"Peak Execution Memory":0,"Result Size":2014,"JVM GC Time":4,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":1385041,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":106039,"Records Read":1219},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":26,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":97,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"215\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[96],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":96,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"216\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[95],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":95,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"219\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[94],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":94,"Name":"FileScanRDD","Scope":"{\"id\":\"219\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203430787,"Completion Time":1707203430863,"Accumulables":[{"ID":1270,"Name":"number of output rows","Value":"1219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1280,"Name":"data size","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1299,"Name":"shuffle bytes written","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1300,"Name":"shuffle records written","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1301,"Name":"shuffle write time","Value":"1385041","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1302,"Name":"duration","Value":"51","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1303,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1306,"Name":"time in aggregation build","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1309,"Name":"internal.metrics.executorDeserializeTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1310,"Name":"internal.metrics.executorDeserializeCpuTime","Value":1823791,"Internal":true,"Count Failed Values":true},{"ID":1311,"Name":"internal.metrics.executorRunTime","Value":59,"Internal":true,"Count Failed Values":true},{"ID":1312,"Name":"internal.metrics.executorCpuTime","Value":25676790,"Internal":true,"Count Failed Values":true},{"ID":1313,"Name":"internal.metrics.resultSize","Value":2014,"Internal":true,"Count Failed Values":true},{"ID":1314,"Name":"internal.metrics.jvmGCTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":1315,"Name":"internal.metrics.resultSerializationTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":1337,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":59,"Internal":true,"Count Failed Values":true},{"ID":1338,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1339,"Name":"internal.metrics.shuffle.write.writeTime","Value":1385041,"Internal":true,"Count Failed Values":true},{"ID":1340,"Name":"internal.metrics.input.bytesRead","Value":106039,"Internal":true,"Count Failed Values":true},{"ID":1341,"Name":"internal.metrics.input.recordsRead","Value":1219,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":20,"Completion Time":1707203430864,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":13,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- == Final Plan ==\n   * HashAggregate (5)\n   +- ShuffleQueryStage (4), Statistics(sizeInBytes=16.0 B, rowCount=1)\n      +- Exchange (3)\n         +- * HashAggregate (2)\n            +- Scan csv  (1)\n+- == Initial Plan ==\n   HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (6)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [hdfs://namenode:9000/tmp/stockprice]\nReadSchema: struct<>\n\n(2) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1742L]\nResults [1]: [count#1743L]\n\n(3) Exchange\nInput [1]: [count#1743L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=330]\n\n(4) ShuffleQueryStage\nOutput [1]: [count#1743L]\nArguments: 0\n\n(5) HashAggregate [codegen id : 2]\nInput [1]: [count#1743L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1739L]\nResults [1]: [count(1)#1739L AS count#1740L]\n\n(6) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#1742L]\nResults [1]: [count#1743L]\n\n(7) Exchange\nInput [1]: [count#1743L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=322]\n\n(8) HashAggregate\nInput [1]: [count#1743L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#1739L]\nResults [1]: [count(1)#1739L AS count#1740L]\n\n(9) AdaptiveSparkPlan\nOutput [1]: [count#1740L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=330]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[hdfs://namenode:9000/tmp/stockprice]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":1270,"metricType":"sum"},{"name":"number of files read","accumulatorId":1271,"metricType":"sum"},{"name":"metadata time","accumulatorId":1272,"metricType":"timing"},{"name":"size of files read","accumulatorId":1273,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1305,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1306,"metricType":"timing"},{"name":"peak memory","accumulatorId":1304,"metricType":"size"},{"name":"number of output rows","accumulatorId":1303,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1308,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1307,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1302,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1300,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1294,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1301,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1295,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1292,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1289,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1298,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1291,"metricType":"sum"},{"name":"records read","accumulatorId":1288,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1286,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1287,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1284,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1290,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1283,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1293,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1282,"metricType":"sum"},{"name":"data size","accumulatorId":1280,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1296,"metricType":"size"},{"name":"number of partitions","accumulatorId":1281,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1297,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1285,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1299,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1347,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1348,"metricType":"timing"},{"name":"peak memory","accumulatorId":1346,"metricType":"size"},{"name":"number of output rows","accumulatorId":1345,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1350,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1349,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1344,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":21,"Submission Time":1707203430889,"Stage Infos":[{"Stage ID":27,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":97,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"215\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[96],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":96,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"216\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[95],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":95,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"219\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[94],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":94,"Name":"FileScanRDD","Scope":"{\"id\":\"219\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":28,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":100,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"225\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[99],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":98,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"224\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[97],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":99,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"220\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[98],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[27],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[27,28],"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"226\",\"name\":\"collect\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"13","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"13","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":28,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":100,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"225\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[99],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":98,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"224\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[97],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":99,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"220\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[98],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[27],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203430889,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"36881","spark.master":"local[*]","spark.submit.pyFiles":"","spark.app.startTime":"1707201177269","spark.rdd.scope":"{\"id\":\"226\",\"name\":\"collect\"}","spark.rdd.compress":"True","spark.executor.id":"driver","spark.app.name":"SparkExample","spark.submit.deployMode":"client","spark.driver.host":"9b6a3c18e92a","spark.app.id":"local-1707201178077","spark.app.submitTime":"1707201177050","spark.eventLog.enabled":"true","spark.eventLog.dir":"file:/home/jovyan/work/logs","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.id":"13","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"13","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":28,"Stage Attempt ID":0,"Task Info":{"Task ID":21,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203430895,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":28,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":21,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707203430895,"Executor ID":"driver","Host":"9b6a3c18e92a","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1707203430940,"Failed":false,"Killed":false,"Accumulables":[{"ID":1283,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1286,"Name":"local bytes read","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1287,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1288,"Name":"records read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1344,"Name":"duration","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1345,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1348,"Name":"time in aggregation build","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1351,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1352,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3907375,"Value":3907375,"Internal":true,"Count Failed Values":true},{"ID":1353,"Name":"internal.metrics.executorRunTime","Update":34,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":1354,"Name":"internal.metrics.executorCpuTime","Update":23064875,"Value":23064875,"Internal":true,"Count Failed Values":true},{"ID":1355,"Name":"internal.metrics.resultSize","Update":3995,"Value":3995,"Internal":true,"Count Failed Values":true},{"ID":1362,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1363,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1364,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1365,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1366,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":1367,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1368,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1369,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1370,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1371,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1372,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1373,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1374,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1375,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1376,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1377,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1378,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":3907375,"Executor Run Time":34,"Executor CPU Time":23064875,"Peak Execution Memory":0,"Result Size":3995,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":59,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":28,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":100,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"225\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[99],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":98,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"224\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[97],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":99,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"220\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[98],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[27],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3625)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:833)","Submission Time":1707203430889,"Completion Time":1707203430941,"Accumulables":[{"ID":1283,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1286,"Name":"local bytes read","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1287,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1288,"Name":"records read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1344,"Name":"duration","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1345,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1348,"Name":"time in aggregation build","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1351,"Name":"internal.metrics.executorDeserializeTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":1352,"Name":"internal.metrics.executorDeserializeCpuTime","Value":3907375,"Internal":true,"Count Failed Values":true},{"ID":1353,"Name":"internal.metrics.executorRunTime","Value":34,"Internal":true,"Count Failed Values":true},{"ID":1354,"Name":"internal.metrics.executorCpuTime","Value":23064875,"Internal":true,"Count Failed Values":true},{"ID":1355,"Name":"internal.metrics.resultSize","Value":3995,"Internal":true,"Count Failed Values":true},{"ID":1362,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1363,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1364,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1365,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1366,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":59,"Internal":true,"Count Failed Values":true},{"ID":1367,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1368,"Name":"internal.metrics.shuffle.read.recordsRead","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1369,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1370,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1371,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1372,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1373,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1374,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1375,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1376,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1377,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1378,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":21,"Completion Time":1707203430942,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":13,"time":1707203430943,"errorMessage":""}
